version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: chatilo-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: chatilo123
      MONGO_INITDB_DATABASE: chatilo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./server/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - chatilo-network

  # MongoDB Express (Optional - Web UI for MongoDB)
  mongo-express:
    image: mongo-express:latest
    container_name: chatilo-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: chatilo123
      ME_CONFIG_MONGODB_URL: mongodb://admin:chatilo123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: chatilo123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - chatilo-network

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: chatilo-server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 1113
      MONGODB_URI: mongodb://admin:chatilo123@mongodb:27017/chatilo?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CORS_ORIGIN: http://localhost:3000
      UPLOAD_PATH: ./uploads
      MAX_FILE_SIZE: 10485760
    ports:
      - "1113:1113"
    volumes:
      - ./server/uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - chatilo-network

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: chatilo-client
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:1113
      REACT_APP_SOCKET_URL: http://localhost:1113
    ports:
      - "3000:80"
    depends_on:
      - server
    networks:
      - chatilo-network

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: chatilo-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - client
      - server
    networks:
      - chatilo-network

volumes:
  mongodb_data:
    driver: local

networks:
  chatilo-network:
    driver: bridge
