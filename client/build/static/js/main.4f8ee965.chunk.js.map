{"version":3,"sources":["contexts/AuthContext.tsx","pages/LoginPage.tsx","pages/RegisterPage.tsx","contexts/SocketContext.tsx","components/ChatRoomList.tsx","components/chat/ChatRoom.tsx","components/MobileHeader.tsx","pages/ChatPage.tsx","pages/ProfilePage.tsx","pages/SettingsPage.tsx","components/ProtectedRoute.tsx","App.tsx","index.js"],"names":["AuthContext","createContext","undefined","useAuth","context","useContext","Error","AuthProvider","_ref","children","user","setUser","useState","token","setToken","loading","setLoading","API_BASE_URL","useEffect","async","storedToken","localStorage","getItem","console","log","response","fetch","concat","headers","ok","userData","json","completeUser","id","_id","username","email","bio","avatar","locationEnabled","notificationsEnabled","isActive","lastSeen","Date","toISOString","createdAt","updatedAt","warn","removeItem","error","checkStoredToken","login","useCallback","password","method","body","JSON","stringify","data","setItem","message","logout","updateUser","updatedUser","errorData","value","register","_jsx","Provider","ChatiloIcon","styled","theme","width","height","borderRadius","background","display","alignItems","justifyContent","boxShadow","border","position","overflow","content","top","left","right","bottom","ChatiloSymbol","_ref2","fontSize","fontWeight","WebkitBackgroundClip","WebkitTextFillColor","backgroundClip","fontFamily","zIndex","GradientBackground","Box","_ref3","minHeight","backgroundSize","animation","padding","spacing","backgroundPosition","GradientTitle","Typography","_ref4","textAlign","marginBottom","letterSpacing","textShadow","GlassCard","Paper","_ref5","backdropFilter","maxWidth","pointerEvents","GradientButton","Button","_ref6","color","textTransform","transition","transform","StyledTabs","Tabs","_ref7","palette","text","secondary","StyledTextField","TextField","_ref8","borderColor","TabPanel","props","index","other","_objectWithoutProperties","_excluded","_objectSpread","role","hidden","LoginPage","tabValue","setTabValue","setError","success","setSuccess","loginEmail","setLoginEmail","loginPassword","setLoginPassword","registerUsername","setRegisterUsername","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","navigate","useNavigate","Container","_jsxs","elevation","mb","sx","gap","variant","opacity","Alert","severity","onChange","handleTabChange","event","newValue","centered","Tab","label","component","onSubmit","e","preventDefault","setTimeout","fullWidth","type","target","required","disabled","size","mt","CircularProgress","GradientCard","Card","RegisterPage","formData","setFormData","confirmPassword","handleChange","prev","name","p","CardContent","gutterBottom","err","margin","Link","href","textDecoration","SocketContext","useSocket","SocketProvider","roomId","urlRoomId","useParams","socket","setSocket","currentRoom","setCurrentRoom","messages","setMessages","rooms","setRooms","chatRooms","setChatRooms","userLocation","setUserLocation","currentLocationName","setCurrentLocationName","isLocationLoading","setIsLocationLoading","locationAccuracy","setLocationAccuracy","SOCKET_URL","process","updateLocationName","latitude","longitude","locationName","city","locality","principalSubdivision","fetchNearbyRoomsWithLocation","radius","nearbyRooms","length","status","getCurrentLocation","navigator","geolocation","getCurrentPosition","accuracy","coords","enableHighAccuracy","timeout","maximumAge","connectSocket","newSocket","io","transports","autoConnect","on","emit","userId","reason","some","m","prevRooms","map","room","participants","userCount","joinRoom","sendMessage","connected","messageData","trim","chatRoom","timestamp","debug","socketId","now","createEventRoom","eventData","likeMessage","messageId","timer","clearTimeout","disconnect","attemptLocationDetection","handleMessage","_message$chatRoom","sender","Object","keys","formattedMessage","isDuplicate","newMessages","handleError","details","code","alert","handleMessageSent","handleConnect","engine","transport","handleDisconnect","off","ChatRoomList","createEventOpen","setCreateEventOpen","eventName","setEventName","eventDescription","setEventDescription","eventStartDate","setEventStartDate","eventEndDate","setEventEndDate","getRoomId","handleRoomClick","selectedRoomId","displayRooms","getRoomIcon","roomType","roomSubType","Public","LocationOn","Group","Event","convertedRooms","distance","subType","description","location","coordinates","address","r","localRooms","filter","regionalRooms","cityRooms","eventRooms","globalRooms","allNeighborhoodRooms","flexDirection","borderBottom","Tooltip","title","MyLocation","mr","Chip","Math","round","ml","backgroundColor","flex","_Fragment","pb","List","dense","ListItem","disablePadding","ListItemButton","selected","onClick","mx","ListItemIcon","Badge","badgeContent","ListItemText","primary","flexWrap","People","Divider","my","_room$event","_room$event2","_room$event3","dateString","startDate","Schedule","toLocaleDateString","day","month","hour","minute","style","Fab","Add","Dialog","open","onClose","DialogTitle","EventAvailable","DialogContent","placeholder","multiline","rows","InputLabelProps","shrink","DialogActions","endDate","ChatRoom","inputMessage","setInputMessage","overflowY","msg","_msg$user","marginTop","toLocaleTimeString","borderTop","outline","marginLeft","cursor","growFromAvatar","keyframes","_templateObject","_taggedTemplateLiteral","pulseGlow","_templateObject2","GlassAppBar","AppBar","FixedToolbar","Toolbar","paddingRight","LogoIcon","marginRight","OverflowAvatar","Avatar","MenuContainer","MenuCircle","delay","active","angle","avatarX","window","innerWidth","adjustedAngle","targetX","cos","PI","targetY","sin","transformOrigin","MobileHeader","_user$username","_user$username$charAt","onMenuClick","menuOpen","setMenuOpen","handleMenuItemClick","action","IconButton","edge","MenuIcon","handleAvatarClick","charAt","toUpperCase","Fade","in","Backdrop","Person","Settings","Info","ChatPage","useTheme","isMobile","useMediaQuery","breakpoints","down","drawerOpen","setDrawerOpen","mobileMenuOpen","setMobileMenuOpen","handleDrawerToggle","Drawer","ModalProps","keepMounted","flexShrink","boxSizing","flexGrow","md","ProfileAvatar","AvatarOverlay","BioTextField","ProfilePage","fileInputRef","useRef","isEditing","setIsEditing","selectedImage","setSelectedImage","snackbar","setSnackbar","editData","setEditData","_fileInputRef$current","current","click","startIcon","ArrowBack","px","py","ref","accept","_event$target$files","file","files","reader","FileReader","onload","_e$target","result","readAsDataURL","src","PhotoCamera","placement","CameraAlt","helperText","Save","Cancel","handleCancel","Edit","handleEdit","Snackbar","autoHideDuration","SettingsPage","settings","setSettings","notifications","darkMode","privateProfile","saveStatus","setSaveStatus","handleSettingChange","setting","checked","ArrowBackIcon","LocationOnIcon","ListItemSecondaryAction","Switch","NotificationsIcon","DarkModeIcon","PrivacyTipIcon","Promise","resolve","ProtectedRoute","Navigate","to","replace","createTheme","main","FINAL_VERSION","EMERGENCY_TIMESTAMP","App","innerHeight","userAgent","sessionStorage","ThemeProvider","CssBaseline","Router","future","v7_startTransition","v7_relativeSplatPath","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.4f8ee965.chunk.js","sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback, ReactNode } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport interface User {\r\n  _id?: string;\r\n  id?: string;\r\n  username: string;\r\n  email: string;\r\n  bio?: string;\r\n  avatar?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n  locationEnabled?: boolean;\r\n  notificationsEnabled?: boolean; // HINZUGEFÜGT\r\n  isActive?: boolean; // HINZUGEFÜGT\r\n  lastSeen?: string; // HINZUGEFÜGT\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  token: string | null;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  register: (username: string, email: string, password: string) => Promise<any>;\r\n  logout: () => void;\r\n  updateUser: (userData: Partial<User>) => Promise<boolean>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true); // ADD THIS\r\n\r\n  const API_BASE_URL = 'http://localhost:1113';\r\n\r\n  // Check for existing token on mount\r\n  useEffect(() => {\r\n    const checkStoredToken = async () => {\r\n      const storedToken = localStorage.getItem('token');\r\n      \r\n      if (storedToken) {\r\n        console.log('🔐 Checking stored token: Token found');\r\n        setToken(storedToken);\r\n        \r\n        try {\r\n          console.log('👤 Fetching user data...');\r\n          const response = await fetch(`${API_BASE_URL}/api/auth/me`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${storedToken}`\r\n            }\r\n          });\r\n\r\n          if (response.ok) {\r\n            const userData = await response.json();\r\n            console.log('✅ User data received:', userData);\r\n            \r\n            // Ensure all required properties exist\r\n            const completeUser: User = {\r\n              id: userData.id || userData._id,\r\n              _id: userData._id || userData.id,\r\n              username: userData.username,\r\n              email: userData.email,\r\n              bio: userData.bio,\r\n              avatar: userData.avatar,\r\n              locationEnabled: userData.locationEnabled || false,\r\n              notificationsEnabled: userData.notificationsEnabled !== false,\r\n              isActive: userData.isActive || true,\r\n              lastSeen: userData.lastSeen || new Date().toISOString(),\r\n              createdAt: userData.createdAt || new Date().toISOString(),\r\n              updatedAt: userData.updatedAt || new Date().toISOString()\r\n            };\r\n            \r\n            setUser(completeUser);\r\n          } else {\r\n            console.warn('⚠️ Token invalid, clearing storage');\r\n            localStorage.removeItem('token');\r\n            setToken(null);\r\n            setUser(null);\r\n            console.log('⚠️ Please login again');\r\n          }\r\n        } catch (error) {\r\n          console.error('❌ Error fetching user data:', error);\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n          setUser(null);\r\n        }\r\n      }\r\n      \r\n      setLoading(false);\r\n    };\r\n\r\n    checkStoredToken();\r\n  }, [API_BASE_URL]);\r\n\r\n  const register = async (username: string, email: string, password: string) => {\r\n    console.log('📝 Attempting registration for:', email);\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log('✅ Registration successful, storing token');\r\n        localStorage.setItem('token', data.token);\r\n        setToken(data.token);\r\n        \r\n        // Create complete user object\r\n        const completeUser: User = {\r\n          id: data.user._id || data.user.id,\r\n          _id: data.user._id || data.user.id,\r\n          username: data.user.username,\r\n          email: data.user.email,\r\n          bio: data.user.bio,\r\n          avatar: data.user.avatar,\r\n          locationEnabled: data.user.locationEnabled || true,\r\n          notificationsEnabled: data.user.notificationsEnabled !== false,\r\n          isActive: data.user.isActive || true,\r\n          lastSeen: data.user.lastSeen || new Date().toISOString(),\r\n          createdAt: data.user.createdAt || new Date().toISOString(),\r\n          updatedAt: data.user.updatedAt || new Date().toISOString()\r\n        };\r\n        \r\n        setUser(completeUser);\r\n        setLoading(false);\r\n        return data;\r\n      } else {\r\n        setLoading(false);\r\n        throw new Error(data.message || 'Registration failed');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('❌ Registration error:', error.message);\r\n      setLoading(false);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const login = useCallback(async (email: string, password: string): Promise<boolean> => {\r\n    try {\r\n      setLoading(true);\r\n      console.log('🔐 Attempting login for:', email);\r\n      const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log('✅ Login successful, storing token');\r\n        localStorage.setItem('token', data.token);\r\n        setToken(data.token);\r\n        \r\n        // Create complete user object like in register\r\n        const completeUser: User = {\r\n          id: data.user._id || data.user.id,\r\n          _id: data.user._id || data.user.id,\r\n          username: data.user.username,\r\n          email: data.user.email,\r\n          bio: data.user.bio,\r\n          avatar: data.user.avatar,\r\n          locationEnabled: data.user.locationEnabled || false,\r\n          notificationsEnabled: data.user.notificationsEnabled !== false,\r\n          isActive: data.user.isActive || true,\r\n          lastSeen: data.user.lastSeen || new Date().toISOString(),\r\n          createdAt: data.user.createdAt || new Date().toISOString(),\r\n          updatedAt: data.user.updatedAt || new Date().toISOString()\r\n        };\r\n        \r\n        setUser(completeUser);\r\n        setLoading(false);\r\n        return true;\r\n      } else {\r\n        console.error('❌ Login failed:', data.message);\r\n        setLoading(false);\r\n        return false;\r\n      }\r\n    } catch (error: any) {\r\n      console.error('❌ Login error:', error.message);\r\n      setLoading(false);\r\n      return false;\r\n    }\r\n  }, [API_BASE_URL]);\r\n\r\n  const logout = useCallback(() => {\r\n    console.log('🚪 Logging out user');\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n    setLoading(false); // ADD THIS\r\n  }, []);\r\n\r\n  const updateUser = useCallback(async (userData: Partial<User>): Promise<boolean> => {\r\n    try {\r\n      console.log('📝 Updating user profile:', userData);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('No token found');\r\n      }\r\n\r\n      const response = await fetch(`${API_BASE_URL}/api/auth/profile`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(userData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const updatedUser = await response.json();\r\n        console.log('✅ Profile updated successfully:', updatedUser);\r\n        setUser(updatedUser.user || updatedUser);\r\n        return true;\r\n      } else {\r\n        const errorData = await response.json();\r\n        console.error('❌ Profile update failed:', errorData);\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error updating profile:', error);\r\n      return false;\r\n    }\r\n  }, [API_BASE_URL]);\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    token,\r\n    loading, // ADD THIS\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUser\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Tab,\r\n  Tabs,\r\n  Alert,\r\n  CircularProgress,\r\n  Container\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// IDENTISCHES CHATILO LOGO wie in ChatHeader! 🚀\r\nconst ChatiloIcon = styled('div')(({ theme }) => ({\r\n  width: 80,\r\n  height: 80,\r\n  borderRadius: '20px',\r\n  background: 'linear-gradient(135deg, #ffffff 0%, #f0f9ff 100%)',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  boxShadow: '0 8px 32px rgba(255, 255, 255, 0.4)',\r\n  border: '3px solid rgba(102, 126, 234, 0.2)', // ADD BORDER\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n  '&::before': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    background: 'linear-gradient(45deg, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0.4) 100%)',\r\n    borderRadius: '17px', // Adjusted for border\r\n  }\r\n}));\r\n\r\nconst ChatiloSymbol = styled('div')(({ theme }) => ({\r\n  fontSize: '48px',\r\n  fontWeight: 900,\r\n  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #f5576c 75%, #4facfe 100%)',\r\n  WebkitBackgroundClip: 'text',\r\n  WebkitTextFillColor: 'transparent',\r\n  backgroundClip: 'text',\r\n  fontFamily: '\"Inter\", sans-serif',\r\n  position: 'relative',\r\n  zIndex: 1,\r\n}));\r\n\r\n// GLEICHER GEILER GRADIENT wie ChatHeader! ✨\r\nconst GradientBackground = styled(Box)(({ theme }) => ({\r\n  minHeight: '100vh',\r\n  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #f5576c 75%, #4facfe 100%)',\r\n  backgroundSize: '400% 400%',\r\n  animation: 'gradientShift 8s ease infinite',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(2),\r\n  '@keyframes gradientShift': {\r\n    '0%': {\r\n      backgroundPosition: '0% 50%'\r\n    },\r\n    '50%': {\r\n      backgroundPosition: '100% 50%'\r\n    },\r\n    '100%': {\r\n      backgroundPosition: '0% 50%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GradientTitle = styled(Typography)(({ theme }) => ({\r\n  fontWeight: 900,\r\n  fontSize: '3rem',\r\n  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #f5576c 75%, #4facfe 100%)',\r\n  WebkitBackgroundClip: 'text',\r\n  WebkitTextFillColor: 'transparent',\r\n  backgroundClip: 'text',\r\n  textAlign: 'center',\r\n  marginBottom: theme.spacing(1),\r\n  letterSpacing: '1px',\r\n  textShadow: '0 2px 10px rgba(102, 126, 234, 0.3)',\r\n}));\r\n\r\nconst GlassCard = styled(Paper)(({ theme }) => ({\r\n  background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(248,250,252,0.95) 100%)',\r\n  backdropFilter: 'blur(20px)',\r\n  border: '1px solid rgba(255, 255, 255, 0.3)',\r\n  borderRadius: 24,\r\n  padding: theme.spacing(4),\r\n  boxShadow: '0 20px 60px rgba(102, 126, 234, 0.3)',\r\n  maxWidth: 450,\r\n  width: '100%',\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n  '&::before': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    background: 'linear-gradient(45deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)',\r\n    borderRadius: 24,\r\n    pointerEvents: 'none'\r\n  }\r\n}));\r\n\r\nconst GradientButton = styled(Button)(({ theme }) => ({\r\n  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #f5576c 75%, #4facfe 100%)',\r\n  backgroundSize: '200% 200%',\r\n  border: 'none',\r\n  borderRadius: 12,\r\n  color: 'white',\r\n  fontWeight: 700,\r\n  fontSize: '1.1rem',\r\n  padding: '12px 24px',\r\n  textTransform: 'none',\r\n  boxShadow: '0 8px 20px rgba(102, 126, 234, 0.4)',\r\n  transition: 'all 0.3s ease',\r\n  '&:hover': {\r\n    backgroundPosition: '100% 0',\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: '0 12px 30px rgba(102, 126, 234, 0.5)',\r\n  },\r\n  '&:active': {\r\n    transform: 'translateY(0px)',\r\n  }\r\n}));\r\n\r\nconst StyledTabs = styled(Tabs)(({ theme }) => ({\r\n  marginBottom: theme.spacing(3),\r\n  '& .MuiTabs-indicator': {\r\n    background: 'linear-gradient(135deg, #667eea 0%, #f093fb 100%)',\r\n    height: 3,\r\n    borderRadius: 2,\r\n  },\r\n  '& .MuiTab-root': {\r\n    textTransform: 'none',\r\n    fontWeight: 600,\r\n    fontSize: '1rem',\r\n    color: theme.palette.text.secondary,\r\n    '&.Mui-selected': {\r\n      background: 'linear-gradient(135deg, #667eea 0%, #f093fb 100%)',\r\n      WebkitBackgroundClip: 'text',\r\n      WebkitTextFillColor: 'transparent',\r\n      backgroundClip: 'text',\r\n    }\r\n  }\r\n}));\r\n\r\nconst StyledTextField = styled(TextField)(({ theme }) => ({\r\n  marginBottom: theme.spacing(2),\r\n  '& .MuiOutlinedInput-root': {\r\n    borderRadius: 12,\r\n    background: 'rgba(255, 255, 255, 0.8)',\r\n    backdropFilter: 'blur(10px)',\r\n    '&:hover .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: '#667eea',\r\n    },\r\n    '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n      borderColor: '#667eea',\r\n      boxShadow: '0 0 0 3px rgba(102, 126, 234, 0.1)',\r\n    }\r\n  },\r\n  '& .MuiInputLabel-root.Mui-focused': {\r\n    color: '#667eea',\r\n  }\r\n}));\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`tabpanel-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [success, setSuccess] = useState<string | null>(null);\r\n\r\n  // Login form\r\n  const [loginEmail, setLoginEmail] = useState('');\r\n  const [loginPassword, setLoginPassword] = useState('');\r\n\r\n  // Register form\r\n  const [registerUsername, setRegisterUsername] = useState('');\r\n  const [registerEmail, setRegisterEmail] = useState('');\r\n  const [registerPassword, setRegisterPassword] = useState('');\r\n\r\n  const { login, register } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n    setError(null);\r\n    setSuccess(null);\r\n  };\r\n\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const success = await login(loginEmail, loginPassword);\r\n      if (success) {\r\n        setSuccess('Login erfolgreich! Weiterleitung...');\r\n        setTimeout(() => {\r\n          navigate('/chat');\r\n        }, 1000);\r\n      }\r\n    } catch (error: any) {\r\n      setError(error.message || 'Login fehlgeschlagen');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const result = await register(registerUsername, registerEmail, registerPassword);\r\n      if (result) {\r\n        setSuccess('Registrierung erfolgreich! Weiterleitung...');\r\n        setTimeout(() => {\r\n          navigate('/chat');\r\n        }, 1000);\r\n      }\r\n    } catch (error: any) {\r\n      setError(error.message || 'Registrierung fehlgeschlagen');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GradientBackground>\r\n      <Container maxWidth=\"sm\">\r\n        <GlassCard elevation={0}>\r\n          {/* CHATILO LOGO & TITLE */}\r\n          <Box textAlign=\"center\" mb={4}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 2, mb: 2 }}>\r\n              <ChatiloIcon>\r\n                <ChatiloSymbol>C</ChatiloSymbol>\r\n              </ChatiloIcon>\r\n              \r\n              <GradientTitle variant=\"h2\" sx={{ mb: 0 }}>\r\n                CHATILO\r\n              </GradientTitle>\r\n            </Box>\r\n            \r\n            <Typography \r\n              variant=\"h6\" \r\n              color=\"text.secondary\" \r\n              sx={{ \r\n                fontWeight: 500,\r\n                opacity: 0.8,\r\n                mb: 2\r\n              }}\r\n            >\r\n              Verbinde dich mit deiner Community\r\n            </Typography>\r\n          </Box>\r\n\r\n          {/* ERROR/SUCCESS ALERTS */}\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 3, borderRadius: 3 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          \r\n          {success && (\r\n            <Alert severity=\"success\" sx={{ mb: 3, borderRadius: 3 }}>\r\n              {success}\r\n            </Alert>\r\n          )}\r\n\r\n          {/* TABS */}\r\n          <StyledTabs value={tabValue} onChange={handleTabChange} centered>\r\n            <Tab label=\"Anmelden\" />\r\n            <Tab label=\"Registrieren\" />\r\n          </StyledTabs>\r\n\r\n          {/* LOGIN TAB */}\r\n          <TabPanel value={tabValue} index={0}>\r\n            <Box component=\"form\" onSubmit={handleLogin}>\r\n              <StyledTextField\r\n                fullWidth\r\n                label=\"E-Mail\"\r\n                type=\"email\"\r\n                value={loginEmail}\r\n                onChange={(e) => setLoginEmail(e.target.value)}\r\n                required\r\n                disabled={loading}\r\n              />\r\n              \r\n              <StyledTextField\r\n                fullWidth\r\n                label=\"Passwort\"\r\n                type=\"password\"\r\n                value={loginPassword}\r\n                onChange={(e) => setLoginPassword(e.target.value)}\r\n                required\r\n                disabled={loading}\r\n              />\r\n\r\n              <GradientButton\r\n                type=\"submit\"\r\n                fullWidth\r\n                size=\"large\"\r\n                disabled={loading}\r\n                sx={{ mt: 2 }}\r\n              >\r\n                {loading ? (\r\n                  <CircularProgress size={24} color=\"inherit\" />\r\n                ) : (\r\n                  'Anmelden'\r\n                )}\r\n              </GradientButton>\r\n            </Box>\r\n          </TabPanel>\r\n\r\n          {/* REGISTER TAB */}\r\n          <TabPanel value={tabValue} index={1}>\r\n            <Box component=\"form\" onSubmit={handleRegister}>\r\n              <StyledTextField\r\n                fullWidth\r\n                label=\"Benutzername\"\r\n                value={registerUsername}\r\n                onChange={(e) => setRegisterUsername(e.target.value)}\r\n                required\r\n                disabled={loading}\r\n              />\r\n              \r\n              <StyledTextField\r\n                fullWidth\r\n                label=\"E-Mail\"\r\n                type=\"email\"\r\n                value={registerEmail}\r\n                onChange={(e) => setRegisterEmail(e.target.value)}\r\n                required\r\n                disabled={loading}\r\n              />\r\n              \r\n              <StyledTextField\r\n                fullWidth\r\n                label=\"Passwort\"\r\n                type=\"password\"\r\n                value={registerPassword}\r\n                onChange={(e) => setRegisterPassword(e.target.value)}\r\n                required\r\n                disabled={loading}\r\n              />\r\n\r\n              <GradientButton\r\n                type=\"submit\"\r\n                fullWidth\r\n                size=\"large\"\r\n                disabled={loading}\r\n                sx={{ mt: 2 }}\r\n              >\r\n                {loading ? (\r\n                  <CircularProgress size={24} color=\"inherit\" />\r\n                ) : (\r\n                  'Registrieren'\r\n                )}\r\n              </GradientButton>\r\n            </Box>\r\n          </TabPanel>\r\n\r\n          {/* FOOTER */}\r\n          <Box textAlign=\"center\" mt={4}>\r\n            <Typography variant=\"caption\" color=\"text.secondary\">\r\n              Willkommen bei CHATILO - Deinem lokalen Chat-Netzwerk\r\n            </Typography>\r\n          </Box>\r\n        </GlassCard>\r\n      </Container>\r\n    </GradientBackground>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState } from 'react';\r\nimport { \r\n  Box, \r\n  Card, \r\n  CardContent, \r\n  TextField, \r\n  Button, \r\n  Typography, \r\n  Link,\r\n  Alert,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst GradientCard = styled(Card)(({ theme }) => ({\r\n  background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(248,250,252,0.9) 100%)',\r\n  backdropFilter: 'blur(10px)',\r\n  borderRadius: 20,\r\n  border: '1px solid rgba(102, 126, 234, 0.1)',\r\n  boxShadow: '0 8px 32px rgba(102, 126, 234, 0.1)',\r\n}));\r\n\r\nconst GradientButton = styled(Button)(({ theme }) => ({\r\n  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n  color: 'white',\r\n  borderRadius: 12,\r\n  padding: '12px 24px',\r\n  fontWeight: 600,\r\n  textTransform: 'none',\r\n  '&:hover': {\r\n    background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)',\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: '0 6px 20px rgba(102, 126, 234, 0.4)',\r\n  }\r\n}));\r\n\r\nconst RegisterPage: React.FC = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const { register } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (formData.password !== formData.confirmPassword) {\r\n      setError('Passwörter stimmen nicht überein');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      await register(formData.username, formData.email, formData.password);\r\n      navigate('/chat');\r\n    } catch (err: any) {\r\n      setError(err.message || 'Registrierung fehlgeschlagen');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #f5576c 75%, #4facfe 100%)',\r\n        p: 3,\r\n      }}\r\n    >\r\n      <GradientCard sx={{ maxWidth: 400, width: '100%' }}>\r\n        <CardContent sx={{ p: 4 }}>\r\n          <Typography \r\n            variant=\"h4\" \r\n            component=\"h1\" \r\n            gutterBottom \r\n            textAlign=\"center\"\r\n            sx={{\r\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n              WebkitBackgroundClip: 'text',\r\n              WebkitTextFillColor: 'transparent',\r\n              fontWeight: 700,\r\n              mb: 3\r\n            }}\r\n          >\r\n            CHATILO\r\n          </Typography>\r\n          \r\n          <Typography variant=\"body1\" textAlign=\"center\" color=\"text.secondary\" sx={{ mb: 3 }}>\r\n            Erstelle dein Konto\r\n          </Typography>\r\n\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          <Box component=\"form\" onSubmit={handleSubmit}>\r\n            <TextField\r\n              fullWidth\r\n              name=\"username\"\r\n              label=\"Benutzername\"\r\n              value={formData.username}\r\n              onChange={handleChange}\r\n              margin=\"normal\"\r\n              required\r\n              disabled={loading}\r\n            />\r\n            \r\n            <TextField\r\n              fullWidth\r\n              name=\"email\"\r\n              label=\"E-Mail\"\r\n              type=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              margin=\"normal\"\r\n              required\r\n              disabled={loading}\r\n            />\r\n            \r\n            <TextField\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Passwort\"\r\n              type=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              margin=\"normal\"\r\n              required\r\n              disabled={loading}\r\n            />\r\n            \r\n            <TextField\r\n              fullWidth\r\n              name=\"confirmPassword\"\r\n              label=\"Passwort bestätigen\"\r\n              type=\"password\"\r\n              value={formData.confirmPassword}\r\n              onChange={handleChange}\r\n              margin=\"normal\"\r\n              required\r\n              disabled={loading}\r\n            />\r\n\r\n            <GradientButton\r\n              type=\"submit\"\r\n              fullWidth\r\n              size=\"large\"\r\n              disabled={loading}\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              {loading ? <CircularProgress size={24} color=\"inherit\" /> : 'Registrieren'}\r\n            </GradientButton>\r\n\r\n            <Box textAlign=\"center\">\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                Bereits ein Konto?{' '}\r\n                <Link \r\n                  href=\"/login\" \r\n                  sx={{ \r\n                    color: 'primary.main',\r\n                    fontWeight: 600,\r\n                    textDecoration: 'none',\r\n                    '&:hover': { textDecoration: 'underline' }\r\n                  }}\r\n                >\r\n                  Anmelden\r\n                </Link>\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </CardContent>\r\n      </GradientCard>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","// c:\\Users\\Johannes\\CHATILO2\\chatilo-app\\src\\contexts\\SocketContext.tsx\r\nimport React, { createContext, useContext, useState, useEffect, useCallback, ReactNode } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { useAuth } from './AuthContext';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n// Types\r\nexport interface Message {\r\n  _id?: string;\r\n  id?: string;\r\n  content: string;\r\n  userId: string;\r\n  username: string;\r\n  timestamp: Date;\r\n  createdAt: Date;\r\n  roomId: string;\r\n  user?: {\r\n    _id?: string;\r\n    id?: string;\r\n    username: string;\r\n  };\r\n  sender?: {\r\n    _id?: string;\r\n    id?: string;\r\n    username: string;\r\n  };\r\n  type?: 'text' | 'image' | 'video';\r\n  mediaUrl?: string;\r\n}\r\n\r\nexport interface ChatRoom {\r\n  _id?: string;\r\n  id?: string;\r\n  name: string;\r\n  type?: 'location' | 'event' | 'global';\r\n  subType?: 'regional' | 'city' | 'neighborhood' | 'general';\r\n  participants: number;\r\n  description?: string;\r\n  lastMessage?: any;\r\n  // KORRIGIERT: Flexible location property - unterstützt beide Formate\r\n  location?: {\r\n    type?: string;\r\n    coordinates?: [number, number];\r\n    address?: string;\r\n    city?: string;\r\n    radius?: number;\r\n    latitude?: number;  // Alternative Format\r\n    longitude?: number; // Alternative Format\r\n  };\r\n  distance?: number;\r\n  event?: {\r\n    name: string;\r\n    description: string;\r\n    startDate: string;\r\n    endDate: string;\r\n    maxParticipants: number;\r\n  };\r\n  createdBy?: string;\r\n  isActive?: boolean;\r\n  lastActivity?: string;\r\n}\r\n\r\nexport interface LocationData {\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\n\r\nexport interface SocketContextType {\r\n  socket: Socket | null;\r\n  currentRoom: string | null;\r\n  userLocation: LocationData | null;\r\n  currentLocationName: string;\r\n  isLocationLoading: boolean;\r\n  locationAccuracy: number | null;\r\n  joinRoom: (roomId: string) => void;\r\n  sendMessage: (content: string) => void;\r\n  messages: Message[];\r\n  rooms: ChatRoom[];\r\n  chatRooms: ChatRoom[];\r\n  setRooms: (rooms: ChatRoom[]) => void;\r\n  setCurrentRoom: (roomId: string | null) => void;\r\n  setMessages: (messages: Message[]) => void;\r\n  user: any;\r\n  createEventRoom: (eventData: any) => Promise<ChatRoom | null>;\r\n  likeMessage: (messageId: string) => Promise<void>;\r\n}\r\n\r\nconst SocketContext = createContext<SocketContextType | undefined>(undefined);\r\n\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext);\r\n  if (context === undefined) { // FIXED: Korrekte Syntax mit öffnender Klammer\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface SocketProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const SocketProvider: React.FC<SocketProviderProps> = ({ children }) => {\r\n  console.log('🔧 DEBUG: SocketProvider initializing...');\r\n  \r\n  const { user } = useAuth();\r\n  const { roomId: urlRoomId } = useParams<{ roomId?: string }>();\r\n\r\n  console.log('🔧 DEBUG: SocketProvider - Initial user:', user);\r\n  console.log('🔧 DEBUG: SocketProvider - URL room ID:', urlRoomId);\r\n\r\n  // Socket State mit korrekten Types\r\n  const [socket, setSocket] = useState<Socket | null>(null);\r\n  const [currentRoom, setCurrentRoom] = useState<string | null>(null);\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [rooms, setRooms] = useState<ChatRoom[]>([]);\r\n  const [chatRooms, setChatRooms] = useState<ChatRoom[]>([]);\r\n\r\n  // Location State\r\n  const [userLocation, setUserLocation] = useState<LocationData | null>(null);\r\n  const [currentLocationName, setCurrentLocationName] = useState<string>('Unknown Location');\r\n  const [isLocationLoading, setIsLocationLoading] = useState<boolean>(false);\r\n  const [locationAccuracy, setLocationAccuracy] = useState<number | null>(null);\r\n\r\n  const SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:1113';\r\n  \r\n  console.log('🔧 DEBUG: SocketProvider - Socket URL:', SOCKET_URL);\r\n  console.log('🔧 DEBUG: SocketProvider - Expected Frontend Port: 1234');\r\n  console.log('🔧 DEBUG: SocketProvider - Expected Backend Port: 1113');\r\n\r\n  // Location Name Updater\r\n  const updateLocationName = useCallback(async (latitude: number, longitude: number) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`\r\n      );\r\n      const data = await response.json();\r\n      const locationName = data.city || data.locality || data.principalSubdivision || 'Unknown Location';\r\n      setCurrentLocationName(locationName);\r\n      console.log(`📍 Location name updated: ${locationName}`);\r\n    } catch (error) {\r\n      console.error('❌ Error fetching location name:', error);\r\n      setCurrentLocationName('Unknown Location');\r\n    }\r\n  }, []);\r\n\r\n  // Fetch Nearby Rooms\r\n  const fetchNearbyRoomsWithLocation = useCallback(async (latitude: number, longitude: number) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        console.log('⏳ No token available for nearby rooms fetch');\r\n        return;\r\n      }\r\n\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:1113'}/api/chat/rooms/nearby`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ latitude, longitude, radius: 10000 })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const nearbyRooms = await response.json();\r\n        console.log(`🏠 Found ${nearbyRooms.length} nearby rooms`);\r\n        setChatRooms(nearbyRooms);\r\n      } else {\r\n        console.error('❌ Failed to fetch nearby rooms:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error fetching nearby rooms:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Location Functions\r\n  const getCurrentLocation = useCallback(() => {\r\n    if (!navigator.geolocation) {\r\n      console.error('❌ Geolocation not supported');\r\n      return;\r\n    }\r\n\r\n    if (isLocationLoading) {\r\n      console.log('⏳ Location already loading, skipping...');\r\n      return;\r\n    }\r\n\r\n    const handleSuccess = (position: GeolocationPosition) => {\r\n      const { latitude, longitude, accuracy } = position.coords;\r\n      \r\n      console.log(`📍 PROGRESSIVE update: accuracy ${accuracy}m, coords: ${latitude}, ${longitude}`);\r\n      \r\n      const locationData: LocationData = { latitude, longitude };\r\n      setUserLocation(locationData);\r\n      setLocationAccuracy(accuracy);\r\n      setIsLocationLoading(false);\r\n      \r\n      updateLocationName(latitude, longitude);\r\n      fetchNearbyRoomsWithLocation(latitude, longitude);\r\n    };\r\n\r\n    const handleError = (error: GeolocationPositionError) => {\r\n      console.error('❌ Geolocation error:', error.message);\r\n      setIsLocationLoading(false);\r\n    };\r\n\r\n    setIsLocationLoading(true);\r\n    navigator.geolocation.getCurrentPosition(handleSuccess, handleError, {\r\n      enableHighAccuracy: true,\r\n      timeout: 10000,\r\n      maximumAge: 300000\r\n    });\r\n  }, [updateLocationName, fetchNearbyRoomsWithLocation, isLocationLoading]);\r\n\r\n  // Socket Connection\r\n  const connectSocket = useCallback(() => {\r\n    if (!user?._id && !user?.id) return null;\r\n    \r\n    console.log(`🔗 Connecting simple chat for: ${user.username}`);\r\n    \r\n    // Korrekte Socket.IO v4 Syntax\r\n    const newSocket: Socket = io(SOCKET_URL, {\r\n      transports: ['websocket', 'polling'],\r\n      timeout: 20000,\r\n      autoConnect: true\r\n    });\r\n\r\n    // Event Listeners mit korrekten Types\r\n    newSocket.on('connect', () => {\r\n      console.log('✅ Socket connected');\r\n      if (user) { // NULL CHECK hinzugefügt\r\n        newSocket.emit('auth', {\r\n          userId: user._id || user.id,\r\n          username: user.username\r\n        });\r\n      }\r\n    });\r\n\r\n    newSocket.on('disconnect', (reason: string) => {\r\n      console.log('🔌 Socket disconnected:', reason);\r\n    });\r\n\r\n    newSocket.on('auth-success', () => {\r\n      console.log('✅ Simple auth successful');\r\n    });\r\n\r\n    // Message Listener mit korrekten Types\r\n    newSocket.on('newMessage', (message: Message) => {\r\n      console.log('📬 New message received:', message);\r\n      setMessages((prev: Message[]) => {\r\n        const isDuplicate = prev.some((m: Message) => \r\n          m._id === message._id || m.id === message.id\r\n        );\r\n        if (isDuplicate) return prev;\r\n        return [...prev, message];\r\n      });\r\n    });\r\n\r\n    // Room Join Listeners\r\n    newSocket.on('joined-room', (data: { roomId: string; messages: Message[]; userCount: number }) => {\r\n      console.log('✅ Joined room confirmed:', data);\r\n      setCurrentRoom(data.roomId);\r\n      setMessages(data.messages || []);\r\n      \r\n      setChatRooms((prevRooms: ChatRoom[]) => \r\n        prevRooms.map((room: ChatRoom) => \r\n          (room._id === data.roomId || room.id === data.roomId)\r\n            ? { ...room, participants: data.userCount }\r\n            : room\r\n        )\r\n      );\r\n    });\r\n\r\n    newSocket.on('joinedRoom', (data: any) => {\r\n      console.log('✅ Joined room confirmed via joinedRoom:', data);\r\n      setCurrentRoom(data.roomId);\r\n      setMessages(data.messages || []);\r\n      \r\n      setChatRooms((prevRooms: ChatRoom[]) => \r\n        prevRooms.map((room: ChatRoom) => \r\n          (room._id === data.roomId || room.id === data.roomId)\r\n            ? { ...room, participants: data.userCount }\r\n            : room\r\n        )\r\n      );\r\n    });\r\n\r\n    newSocket.on('roomMessages', (messages: Message[]) => {\r\n      console.log('✅ Room messages received via roomMessages:', messages);\r\n      setMessages(messages || []);\r\n    });\r\n\r\n    newSocket.on('room-joined', (data: any) => {\r\n      console.log('✅ Joined room confirmed via room-joined:', data);\r\n      setCurrentRoom(data.roomId);\r\n      setMessages(data.messages || []);\r\n    });\r\n\r\n    newSocket.on('messages-loaded', (messages: Message[]) => {\r\n      console.log('✅ Messages loaded via messages-loaded:', messages);\r\n      setMessages(messages || []);\r\n    });\r\n\r\n    newSocket.on('room-data', (data: any) => {\r\n      console.log('✅ Room data received via room-data:', data);\r\n      setCurrentRoom(data.roomId);\r\n      setMessages(data.messages || []);\r\n    });\r\n\r\n    newSocket.on('userCountUpdate', (data: any) => {\r\n      console.log('👥 User count updated:', data);\r\n      setChatRooms((prevRooms: ChatRoom[]) => \r\n        prevRooms.map((room: ChatRoom) => \r\n          (room._id === data.roomId || room.id === data.roomId)\r\n            ? { ...room, participants: data.userCount }\r\n            : room\r\n        )\r\n      );\r\n    });\r\n\r\n    console.log('✅ ALL socket event listeners registered successfully!');\r\n    \r\n    setSocket(newSocket);\r\n    return newSocket;\r\n  }, [user, SOCKET_URL]);\r\n\r\n  // SIMPLE JOIN ROOM - keep room loading intact\r\n  const joinRoom = useCallback((roomId: string) => {\r\n    console.log('🚪 Joining room:', roomId);\r\n    \r\n    if (!socket) {\r\n      const newSocket = connectSocket();\r\n      setTimeout(() => {\r\n        console.log('🚀 EMITTING join-room event after socket creation');\r\n        newSocket?.emit('join-room', roomId);\r\n      }, 1000);\r\n      return;\r\n    }\r\n    \r\n    console.log('🚀 EMITTING join-room event to Simple Chat Server');\r\n    socket.emit('join-room', roomId);\r\n    setCurrentRoom(roomId); // Set immediately for UI\r\n  }, [socket, connectSocket]);\r\n\r\n  // ERWEITERTE DEBUGGING SEND MESSAGE\r\n  const sendMessage = useCallback((content: string) => {\r\n    console.log('🔧 DEBUG: sendMessage called with content:', content);\r\n    console.log('🔧 DEBUG: Socket available:', !!socket);\r\n    console.log('🔧 DEBUG: Current room:', currentRoom);\r\n    console.log('🔧 DEBUG: Socket connected:', socket?.connected);\r\n    console.log('🔧 DEBUG: User info:', { id: user?.id, username: user?.username });\r\n\r\n    if (!socket || !currentRoom) {\r\n      console.error('❌ DETAILED ERROR: Missing requirements');\r\n      console.error('   - Socket exists:', !!socket);\r\n      console.error('   - Socket connected:', socket?.connected);\r\n      console.error('   - Current room:', currentRoom);\r\n      console.error('   - User ID:', user?.id || user?._id);\r\n      return;\r\n    }\r\n\r\n    const messageData = {\r\n      content: content.trim(),\r\n      chatRoom: currentRoom,\r\n      timestamp: new Date().toISOString(),\r\n      // DEBUGGING: Zusätzliche Metadaten\r\n      debug: {\r\n        userId: user?.id || user?._id,\r\n        username: user?.username,\r\n        socketId: socket?.id,\r\n        timestamp: Date.now()\r\n      }\r\n    };\r\n\r\n    console.log('📤 DETAILED Message data:');\r\n    console.log('   Content:', messageData.content);\r\n    console.log('   ChatRoom:', messageData.chatRoom);\r\n    console.log('   Timestamp:', messageData.timestamp);\r\n    console.log('   Debug info:', messageData.debug);\r\n    console.log('   Full object:', JSON.stringify(messageData, null, 2));\r\n\r\n    // DEBUGGING: Socket event emission\r\n    console.log('🚀 Emitting sendMessage event...');\r\n    try {\r\n      socket.emit('sendMessage', messageData);\r\n      console.log('✅ sendMessage event emitted successfully');\r\n    } catch (error) {\r\n      console.error('❌ Error emitting sendMessage:', error);\r\n    }\r\n  }, [socket, currentRoom, user]);\r\n\r\n  // Füge fehlende Dummy-Funktionen hinzu\r\n  const createEventRoom = useCallback(async (eventData: any): Promise<ChatRoom | null> => {\r\n    console.log('🎉 Creating event room:', eventData);\r\n    // TODO: Implementiere Event-Room-Erstellung\r\n    return null;\r\n  }, []);\r\n\r\n  // Repariere likeMessage Funktion\r\n  const likeMessage = useCallback(async (messageId: string): Promise<void> => {\r\n    console.log('👍 Liking message:', messageId);\r\n    // TODO: Implementiere Message-Like-Funktionalität\r\n  }, []);\r\n\r\n  // Context Value\r\n  const value: SocketContextType = {\r\n    socket,\r\n    currentRoom,\r\n    userLocation,\r\n    currentLocationName,\r\n    isLocationLoading,\r\n    locationAccuracy,\r\n    joinRoom,\r\n    sendMessage,\r\n    messages,\r\n    rooms,\r\n    chatRooms,\r\n    setRooms,\r\n    setCurrentRoom,\r\n    setMessages,\r\n    user,\r\n    createEventRoom,\r\n    likeMessage\r\n  };\r\n\r\n  // Socket Connection Effect - KORRIGIERT mit besserer Auth-Behandlung\r\n  useEffect(() => {\r\n    if (user?.id && !socket) {\r\n      console.log('🔗 Initiating socket connection...');\r\n      \r\n      // Kürzere Wartezeit für neu registrierte User\r\n      const timer = setTimeout(() => {\r\n        connectSocket();\r\n      }, 500); // Nur 500ms statt 2 Sekunden\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n    \r\n    return () => {\r\n      if (socket) {\r\n        console.log('🔌 Disconnecting socket...');\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, [user, socket, connectSocket]);\r\n\r\n  // Progressive Location Detection - FIX TIMING ISSUE\r\n  useEffect(() => {\r\n    if (!user?.locationEnabled) return;\r\n    \r\n    console.log('📍 Starting IMMEDIATE location detection...');\r\n    \r\n    // CRITICAL FIX: Synchrone Token-Prüfung + besseres Retry\r\n    const attemptLocationDetection = () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token && !userLocation && !isLocationLoading) {\r\n        console.log('🚀 Token found! Triggering getCurrentLocation immediately');\r\n        getCurrentLocation();\r\n      } else if (!token) {\r\n        console.log('⏳ No token yet, retrying in 1s...');\r\n        setTimeout(attemptLocationDetection, 1000); // Kürzere Wartezeit\r\n      } else {\r\n        console.log('🔄 Location already loading or available');\r\n      }\r\n    };\r\n\r\n    // SOFORTIGER Start ohne Delay\r\n    const timer = setTimeout(attemptLocationDetection, 100); // Nur 100ms Delay\r\n\r\n    return () => clearTimeout(timer);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user?.locationEnabled, getCurrentLocation]);\r\n\r\n  // AUTO-JOIN ROOM FROM URL\r\n  useEffect(() => {\r\n    if (urlRoomId && socket && urlRoomId !== currentRoom) {\r\n      console.log(`🚪 Auto-joining room from URL: ${urlRoomId}`);\r\n      joinRoom(urlRoomId);\r\n    }\r\n  }, [urlRoomId, socket, currentRoom, joinRoom]);\r\n\r\n  // ERWEITERTE DEBUGGING MESSAGE LISTENER\r\n  useEffect(() => {\r\n    if (!socket) {\r\n      console.log('🔧 DEBUG: No socket for message listener');\r\n      return;\r\n    }\r\n\r\n    console.log('🔧 DEBUG: Setting up message listeners');\r\n\r\n    const handleMessage = (message: any) => {\r\n      console.log('📨 DETAILED Received newMessage:');\r\n      console.log('   Full message object:', JSON.stringify(message, null, 2));\r\n      console.log('   Message ID:', message._id);\r\n      console.log('   Content:', message.content);\r\n      console.log('   Sender:', message.sender);\r\n      console.log('   ChatRoom:', message.chatRoom);\r\n      console.log('   Timestamp:', message.timestamp);\r\n      \r\n      if (!message.sender) {\r\n        console.error('❌ DETAILED: Invalid message structure');\r\n        console.error('   Missing sender in message:', message);\r\n        console.error('   Available keys:', Object.keys(message));\r\n        return;\r\n      }\r\n\r\n      const formattedMessage: Message = {\r\n        _id: message._id,\r\n        id: message._id,\r\n        content: message.content,\r\n        userId: message.sender._id || message.sender.id,\r\n        username: message.sender.username,\r\n        timestamp: new Date(message.timestamp || message.createdAt),\r\n        createdAt: new Date(message.timestamp || message.createdAt),\r\n        roomId: message.chatRoom?._id || message.chatRoom,\r\n        sender: message.sender,\r\n        type: 'text'\r\n      };\r\n\r\n      console.log('✅ FORMATTED message:');\r\n      console.log('   Formatted object:', JSON.stringify(formattedMessage, null, 2));\r\n\r\n      setMessages(prev => {\r\n        console.log('🔧 DEBUG: Current messages count:', prev.length);\r\n        const isDuplicate = prev.some(m => m._id === formattedMessage._id);\r\n        console.log('🔧 DEBUG: Is duplicate?', isDuplicate);\r\n        \r\n        if (isDuplicate) {\r\n          console.log('⚠️ Skipping duplicate message:', formattedMessage._id);\r\n          return prev;\r\n        }\r\n        \r\n        const newMessages = [...prev, formattedMessage];\r\n        console.log('✅ Adding new message. New count:', newMessages.length);\r\n        return newMessages;\r\n      });\r\n    };\r\n\r\n    const handleError = (error: any) => {\r\n      console.error('❌ DETAILED Socket error:');\r\n      console.error('   Error object:', error);\r\n      console.error('   Error message:', error.message);\r\n      console.error('   Error details:', error.details);\r\n      console.error('   Error code:', error.code);\r\n      console.error('   Full error:', JSON.stringify(error, null, 2));\r\n      \r\n      // DEBUGGING: Alert für Fehler\r\n      if (error.message) {\r\n        alert(`Chat Fehler: ${error.message}`);\r\n      }\r\n    };\r\n\r\n    const handleMessageSent = (data: any) => {\r\n      console.log('✅ DETAILED Message sent confirmation:');\r\n      console.log('   Confirmation data:', JSON.stringify(data, null, 2));\r\n      console.log('   Success:', data.success);\r\n      console.log('   Message ID:', data.messageId);\r\n    };\r\n\r\n    const handleConnect = () => {\r\n      console.log('🔗 DETAILED Socket connected:');\r\n      console.log('   Socket ID:', socket.id);\r\n      console.log('   Socket connected:', socket.connected);\r\n      console.log('   Socket transport:', socket.io.engine.transport.name);\r\n    };\r\n\r\n    const handleDisconnect = (reason: string) => {\r\n      console.log('🔌 DETAILED Socket disconnected:');\r\n      console.log('   Reason:', reason);\r\n      console.log('   Socket ID:', socket.id);\r\n    };\r\n\r\n    // ALLE EVENT LISTENER mit Debugging\r\n    socket.on('newMessage', handleMessage);\r\n    socket.on('error', handleError);\r\n    socket.on('messageSent', handleMessageSent);\r\n    socket.on('connect', handleConnect);\r\n    socket.on('disconnect', handleDisconnect);\r\n\r\n    console.log('✅ All message listeners registered with debugging');\r\n\r\n    return () => {\r\n      console.log('🔧 DEBUG: Cleaning up message listeners');\r\n      socket.off('newMessage', handleMessage);\r\n      socket.off('error', handleError);\r\n      socket.off('messageSent', handleMessageSent);\r\n      socket.off('connect', handleConnect);\r\n      socket.off('disconnect', handleDisconnect);\r\n    };\r\n  }, [socket]);\r\n\r\n  console.log('🔧 DEBUG: SocketProvider fully initialized');\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n  Badge,\r\n  Tooltip,\r\n  Chip,\r\n  Divider,\r\n  Fab,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport {\r\n  LocationOn,\r\n  Event,\r\n  People,\r\n  Public,\r\n  Group,\r\n  MyLocation,\r\n  Add,\r\n  Schedule,\r\n  EventAvailable\r\n} from '@mui/icons-material';\r\nimport { useSocket } from '../contexts/SocketContext';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\ninterface ChatRoom {\r\n  id: string;\r\n  _id?: string;\r\n  name: string;\r\n  type: 'location' | 'event' | 'global';\r\n  subType?: 'regional' | 'city' | 'neighborhood' | 'general';\r\n  participants: number;\r\n  lastMessage?: any;\r\n  // KORRIGIERT: Flexible location property\r\n  location?: {\r\n    type?: string;\r\n    coordinates?: [number, number];\r\n    address?: string;\r\n    city?: string;\r\n    radius?: number;\r\n    latitude?: number;  // Alternative Format\r\n    longitude?: number; // Alternative Format\r\n  };\r\n  event?: {\r\n    name: string;\r\n    description: string;\r\n    startDate: string;\r\n    endDate: string;\r\n    maxParticipants: number;\r\n  };\r\n  createdBy?: string;\r\n  isActive?: boolean;\r\n  lastActivity?: string;\r\n  distance?: number;\r\n  description?: string;\r\n}\r\n\r\nconst ChatRoomList: React.FC = () => {\r\n  const { \r\n    rooms, \r\n    chatRooms, \r\n    joinRoom, \r\n    userLocation, \r\n    currentLocationName, \r\n    isLocationLoading, \r\n    locationAccuracy,\r\n    createEventRoom \r\n  } = useSocket();\r\n  \r\n  const [createEventOpen, setCreateEventOpen] = useState(false);\r\n  const [eventName, setEventName] = useState('');\r\n  const [eventDescription, setEventDescription] = useState('');\r\n  const [eventStartDate, setEventStartDate] = useState('');\r\n  const [eventEndDate, setEventEndDate] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n  const { roomId } = useParams<{ roomId: string }>();\r\n\r\n  // Type-safe room ID extraction\r\n  const getRoomId = (room: any): string => {\r\n    const id = room._id || room.id;\r\n    if (!id) {\r\n      console.warn('⚠️ Room without valid ID:', room);\r\n      return 'unknown-room';\r\n    }\r\n    return id;\r\n  };\r\n\r\n  const handleRoomClick = (selectedRoomId: string) => {\r\n    console.log('🚪 Navigating to room:', selectedRoomId); \r\n    joinRoom(selectedRoomId);\r\n    navigate(`/chat/${selectedRoomId}`);\r\n  };\r\n\r\n  // Verwende rooms ODER chatRooms - welche auch immer gefüllt sind\r\n  const displayRooms = rooms && rooms.length > 0 ? rooms : chatRooms;\r\n\r\n  // KORRIGIERT: getRoomIcon ohne Type Assertion - akzeptiert string types\r\n  const getRoomIcon = (roomType: string, roomSubType?: string) => {\r\n    switch (roomType) {\r\n      case 'location':\r\n        if (roomSubType === 'regional') return <Public color=\"primary\" />;\r\n        if (roomSubType === 'city') return <LocationOn color=\"primary\" />;\r\n        if (roomSubType === 'neighborhood') return <Group color=\"secondary\" />;\r\n        return <LocationOn color=\"primary\" />;\r\n      case 'event':\r\n        return <Event color=\"secondary\" />;\r\n      case 'global':\r\n        return <Public color=\"action\" />;\r\n      default:\r\n        return <Group />;\r\n    }\r\n  };\r\n\r\n  const formatEventTime = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('de-DE', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const handleCreateEvent = async () => {\r\n    try {\r\n      await createEventRoom({\r\n        eventName,\r\n        eventDescription,\r\n        startDate: eventStartDate,\r\n        endDate: eventEndDate\r\n      });\r\n      \r\n      setCreateEventOpen(false);\r\n      setEventName('');\r\n      setEventDescription('');\r\n      setEventStartDate('');\r\n      setEventEndDate('');\r\n    } catch (error) {\r\n      console.error('Error creating event:', error);\r\n    }\r\n  };\r\n\r\n  // KORRIGIERT: Sichere Type Conversion ohne \"as ChatRoom\"\r\n  const convertedRooms = displayRooms?.map((room, index) => {\r\n    console.log('🔍 Processing room:', room.name, 'participants:', room.participants, 'distance:', room.distance, 'type:', room.type, 'subType:', room.subType);\r\n    \r\n    // SICHERE Type Conversion ohne Type Assertions\r\n    const convertedRoom: ChatRoom = {\r\n      ...room,\r\n      id: getRoomId(room),\r\n      type: (room.type || 'location') as 'location' | 'event' | 'global',\r\n      subType: (room.subType || 'neighborhood') as 'regional' | 'city' | 'neighborhood' | 'general' | undefined,\r\n      participants: room.participants || 0,\r\n      distance: room.distance || 0,\r\n      event: room.event || undefined,\r\n      description: room.description || undefined,\r\n      // LOCATION MAPPING: Unterstütze beide Formate - KEIN TYPE CONFLICT\r\n      location: room.location ? {\r\n        type: room.location.type || 'Point',\r\n        coordinates: room.location.coordinates || [\r\n          room.location.longitude || 0, \r\n          room.location.latitude || 0\r\n        ],\r\n        address: room.location.address,\r\n        city: room.location.city,\r\n        radius: room.location.radius,\r\n        latitude: room.location.latitude,\r\n        longitude: room.location.longitude\r\n      } : undefined\r\n    };\r\n    \r\n    return convertedRoom;\r\n  }) || [];\r\n\r\n  console.log('🔄 Converted rooms:', convertedRooms.length, convertedRooms.map(r => `${r.name} (type: ${r.type}, subType: ${r.subType})`));\r\n\r\n  // KRITISCHER FIX: Filter nur auf 'location' - Server sendet jetzt korrekte Types\r\n  const localRooms = convertedRooms.filter(room => \r\n    room.type === 'location' // Nur location - neighborhood ist jetzt subType!\r\n  );\r\n  \r\n  const regionalRooms = localRooms.filter(room => \r\n    room.subType === 'regional'\r\n  );\r\n\r\n  // FEHLENDE VARIABLEN:\r\n  const cityRooms = localRooms.filter(room => \r\n    room.subType === 'city'\r\n  );\r\n  \r\n  const eventRooms = convertedRooms.filter(room => \r\n    room.type === 'event'\r\n  );\r\n  \r\n  const globalRooms = convertedRooms.filter(room => \r\n    room.type === 'global'\r\n  );\r\n\r\n  // ALLE lokalen Rooms als Neighborhood anzeigen\r\n  const allNeighborhoodRooms = localRooms;\r\n\r\n  console.log('🏗️ After type filtering:');\r\n  console.log('   Local rooms:', localRooms.length, localRooms.map(r => r.name));\r\n  console.log('   Event rooms:', eventRooms.length);\r\n  console.log('   Global rooms:', globalRooms.length);\r\n\r\n  return (\r\n    <Box sx={{ \r\n      height: '100vh', \r\n      display: 'flex', \r\n      flexDirection: 'column',\r\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n      color: 'white'\r\n    }}>\r\n      {/* Header */}\r\n      <Box sx={{ \r\n        p: 2, \r\n        borderBottom: '1px solid rgba(255,255,255,0.2)',\r\n        background: 'rgba(255,255,255,0.1)',\r\n        backdropFilter: 'blur(10px)'\r\n      }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\r\n          <Typography variant=\"h6\" sx={{ \r\n            fontWeight: 'bold',\r\n            background: 'linear-gradient(135deg, #ffffff 0%, #f0f0f0 100%)',\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n            backgroundClip: 'text'\r\n          }}>\r\n            CHATILO 🚀\r\n          </Typography>\r\n          {userLocation && (\r\n            <Tooltip title=\"Standort aktiv\">\r\n              <MyLocation color=\"success\" fontSize=\"small\" />\r\n            </Tooltip>\r\n          )}\r\n        </Box>\r\n        \r\n        {/* Loading-State für Standortermittlung */}\r\n        {isLocationLoading && (\r\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n            <CircularProgress size={16} sx={{ mr: 1, color: 'white' }} />\r\n            <Typography variant=\"body2\" sx={{ color: 'rgba(255,255,255,0.8)' }}>\r\n              Standort wird ermittelt...\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        \r\n        {/* Aktueller Standort - nur wenn nicht loading */}\r\n        {currentLocationName && !isLocationLoading && (\r\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n            <LocationOn sx={{ fontSize: 16, mr: 0.5, color: 'white' }} />\r\n            <Typography variant=\"body2\" sx={{ color: 'rgba(255,255,255,0.8)' }}>\r\n              {currentLocationName}\r\n            </Typography>\r\n            {locationAccuracy && (\r\n              <Chip \r\n                label={`±${Math.round(locationAccuracy)}m`} \r\n                size=\"small\" \r\n                sx={{ \r\n                  ml: 1, \r\n                  fontSize: '0.6rem', \r\n                  height: 16,\r\n                  backgroundColor: 'rgba(255,255,255,0.2)',\r\n                  color: 'white'\r\n                }}\r\n                color={locationAccuracy <= 100 ? 'success' : locationAccuracy <= 500 ? 'warning' : 'default'}\r\n              />\r\n            )}\r\n          </Box>\r\n        )}\r\n\r\n        {/* Rooms Loading-State */}\r\n        {convertedRooms.length === 0 && !isLocationLoading && (\r\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n            <CircularProgress size={16} sx={{ mr: 1, color: 'white' }} />\r\n            <Typography variant=\"body2\" sx={{ color: 'rgba(255,255,255,0.7)' }}>\r\n              Chat-Räume werden geladen...\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n\r\n      {/* Room Lists */}\r\n      <Box sx={{ \r\n        flex: 1, \r\n        overflow: 'auto',\r\n        background: 'rgba(255,255,255,0.05)',\r\n        backdropFilter: 'blur(20px)'\r\n      }}>\r\n        {/* Regional-Chats */}\r\n        {regionalRooms.length > 0 && (\r\n          <>\r\n            <Box sx={{ p: 2, pb: 1 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ \r\n                fontWeight: 'bold',\r\n                color: 'white'\r\n              }}>\r\n                🌍 Regional ({regionalRooms.length})\r\n              </Typography>\r\n            </Box>\r\n            <List dense>\r\n              {regionalRooms.map((room, index) => (\r\n                <ListItem key={`regional-${getRoomId(room)}-${index}`} disablePadding>\r\n                  <ListItemButton\r\n                    selected={roomId === getRoomId(room)}\r\n                    onClick={() => handleRoomClick(getRoomId(room))}\r\n                    sx={{\r\n                      borderRadius: 1,\r\n                      mx: 1,\r\n                      mb: 0.5,\r\n                      background: roomId === getRoomId(room) \r\n                        ? 'linear-gradient(135deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0.1) 100%)'\r\n                        : 'rgba(255,255,255,0.1)',\r\n                      '&:hover': {\r\n                        background: 'linear-gradient(135deg, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0.1) 100%)',\r\n                        transform: 'translateY(-2px)',\r\n                      },\r\n                      transition: 'all 0.3s ease',\r\n                      color: 'white'\r\n                    }}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Badge badgeContent={room.participants} color=\"primary\">\r\n                        {getRoomIcon(room.type, room.subType)}\r\n                      </Badge>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={room.name}\r\n                      secondary={\r\n                        <Box component=\"div\" sx={{ display: 'flex', alignItems: 'center', gap: 1, flexWrap: 'wrap' }}>\r\n                          <Box component=\"div\" sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                            <People fontSize=\"small\" />\r\n                            <Typography component=\"span\" variant=\"caption\">\r\n                              {room.participants || 0} online\r\n                            </Typography>\r\n                          </Box>\r\n                          {room.distance !== undefined && room.distance !== null && (\r\n                            <Chip \r\n                              label={`${room.distance}km`}\r\n                              size=\"small\" \r\n                              variant=\"outlined\"\r\n                              sx={{ \r\n                                height: 16, \r\n                                fontSize: '0.7rem',\r\n                                borderColor: 'rgba(255,255,255,0.5)',\r\n                                color: 'white'\r\n                              }}\r\n                            />\r\n                          )}\r\n                        </Box>\r\n                      }\r\n                    />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider sx={{ my: 1, borderColor: 'rgba(255,255,255,0.2)' }} />\r\n          </>\r\n        )}\r\n\r\n        {/* Stadt-Chats */}\r\n        {cityRooms.length > 0 && (\r\n          <>\r\n            <Box sx={{ p: 2, pb: 1 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ \r\n                fontWeight: 'bold',\r\n                color: 'white'\r\n              }}>\r\n                🏙️ Stadt ({cityRooms.length})\r\n              </Typography>\r\n            </Box>\r\n            <List dense>\r\n              {cityRooms.map((room, index) => (\r\n                <ListItem key={`city-${getRoomId(room)}-${index}`} disablePadding>\r\n                  <ListItemButton\r\n                    selected={roomId === getRoomId(room)}\r\n                    onClick={() => handleRoomClick(getRoomId(room))}\r\n                    sx={{\r\n                      borderRadius: 1,\r\n                      mx: 1,\r\n                      mb: 0.5,\r\n                      background: roomId === getRoomId(room) \r\n                        ? 'linear-gradient(135deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0.1) 100%)'\r\n                        : 'rgba(255,255,255,0.1)',\r\n                      '&:hover': {\r\n                        background: 'linear-gradient(135deg, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0.1) 100%)',\r\n                        transform: 'translateY(-2px)',\r\n                      },\r\n                      transition: 'all 0.3s ease',\r\n                      color: 'white'\r\n                    }}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Badge badgeContent={room.participants} color=\"primary\">\r\n                        {getRoomIcon(room.type, room.subType)}\r\n                      </Badge>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={room.name}\r\n                      secondary={\r\n                        <Box component=\"div\" sx={{ display: 'flex', alignItems: 'center', gap: 1, flexWrap: 'wrap' }}>\r\n                          <Box component=\"div\" sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                            <People fontSize=\"small\" />\r\n                            <Typography component=\"span\" variant=\"caption\">\r\n                              {room.participants || 0} online\r\n                            </Typography>\r\n                          </Box>\r\n                          {room.distance !== undefined && room.distance !== null && (\r\n                            <Chip \r\n                              label={`${room.distance}km`}\r\n                              size=\"small\" \r\n                              variant=\"outlined\"\r\n                              sx={{ \r\n                                height: 16, \r\n                                fontSize: '0.7rem',\r\n                                borderColor: 'rgba(255,255,255,0.5)',\r\n                                color: 'white'\r\n                              }}\r\n                            />\r\n                          )}\r\n                        </Box>\r\n                      }\r\n                    />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider sx={{ my: 1, borderColor: 'rgba(255,255,255,0.2)' }} />\r\n          </>\r\n        )}\r\n\r\n        {/* Nachbarschafts-Chats - VERWENDE ALLE NEIGHBORHOOD ROOMS */}\r\n        {allNeighborhoodRooms.length > 0 && (\r\n          <>\r\n            <Box sx={{ p: 2, pb: 1 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ \r\n                fontWeight: 'bold',\r\n                color: 'white'\r\n              }}>\r\n                🏘️ Nachbarschaft ({allNeighborhoodRooms.length})\r\n              </Typography>\r\n            </Box>\r\n            <List dense>\r\n              {allNeighborhoodRooms.map((room, index) => (\r\n                <ListItem key={`neighborhood-${getRoomId(room)}-${index}`} disablePadding>\r\n                  <ListItemButton\r\n                    selected={roomId === getRoomId(room)}\r\n                    onClick={() => handleRoomClick(getRoomId(room))}\r\n                    sx={{\r\n                      borderRadius: 1,\r\n                      mx: 1,\r\n                      mb: 0.5,\r\n                      background: roomId === getRoomId(room) \r\n                        ? 'linear-gradient(135deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0.1) 100%)'\r\n                        : 'rgba(255,255,255,0.1)',\r\n                      '&:hover': {\r\n                        background: 'linear-gradient(135deg, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0.1) 100%)',\r\n                        transform: 'translateY(-2px)',\r\n                      },\r\n                      transition: 'all 0.3s ease',\r\n                      color: 'white'\r\n                    }}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Badge badgeContent={room.participants} color=\"secondary\">\r\n                        {getRoomIcon(room.type || 'location', room.subType)}\r\n                      </Badge>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={room.name}\r\n                      secondary={\r\n                        <Box component=\"div\" sx={{ display: 'flex', alignItems: 'center', gap: 1, flexWrap: 'wrap' }}>\r\n                          <Box component=\"div\" sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>\r\n                            <People fontSize=\"small\" />\r\n                            <Typography component=\"span\" variant=\"caption\">\r\n                              {room.participants || 0} online\r\n                            </Typography>\r\n                          </Box>\r\n                          {room.distance !== undefined && room.distance !== null && (\r\n                            <Chip \r\n                              label={`${room.distance}km`}\r\n                              size=\"small\" \r\n                              variant=\"outlined\"\r\n                              sx={{ \r\n                                height: 16, \r\n                                fontSize: '0.7rem',\r\n                                borderColor: 'rgba(255,255,255,0.5)',\r\n                                color: 'white'\r\n                              }}\r\n                            />\r\n                          )}\r\n                        </Box>\r\n                      }\r\n                    />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider sx={{ my: 1, borderColor: 'rgba(255,255,255,0.2)' }} />\r\n          </>\r\n        )}\r\n\r\n        {/* Event-Chats */}\r\n        {eventRooms.length > 0 && (\r\n          <>\r\n            <Box sx={{ p: 2, pb: 1 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ \r\n                fontWeight: 'bold',\r\n                color: 'white'\r\n              }}>\r\n                🎉 Events ({eventRooms.length})\r\n              </Typography>\r\n            </Box>\r\n            <List dense>\r\n              {eventRooms.map((room, index) => (\r\n                <ListItem key={`event-${getRoomId(room)}-${index}`} disablePadding>\r\n                  <ListItemButton\r\n                    selected={roomId === getRoomId(room)}\r\n                    onClick={() => handleRoomClick(getRoomId(room))}\r\n                    sx={{\r\n                      borderRadius: 1,\r\n                      mx: 1,\r\n                      mb: 0.5,\r\n                      background: roomId === getRoomId(room) \r\n                        ? 'linear-gradient(135deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0.1) 100%)'\r\n                        : 'rgba(255,255,255,0.1)',\r\n                      '&:hover': {\r\n                        background: 'linear-gradient(135deg, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0.1) 100%)',\r\n                        transform: 'translateY(-2px)',\r\n                      },\r\n                      transition: 'all 0.3s ease',\r\n                      color: 'white'\r\n                    }}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Badge badgeContent={room.participants} color=\"secondary\">\r\n                        <Event color=\"secondary\" />\r\n                      </Badge>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={room.event?.name || room.name}\r\n                      secondary={\r\n                        <Box>\r\n                          <Typography variant=\"caption\" sx={{ color: 'rgba(255,255,255,0.7)' }}>\r\n                            {room.event?.description || room.description || 'Event beschreibung'}\r\n                          </Typography>\r\n                          {room.event?.startDate && (\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mt: 0.5 }}>\r\n                              <Schedule fontSize=\"small\" color=\"action\" />\r\n                              <Typography variant=\"caption\" sx={{ color: 'rgba(255,255,255,0.7)' }}>\r\n                                {formatEventTime(room.event.startDate)}\r\n                              </Typography>\r\n                            </Box>\r\n                          )}\r\n                        </Box>\r\n                      }\r\n                    />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider sx={{ my: 1, borderColor: 'rgba(255,255,255,0.2)' }} />\r\n          </>\r\n        )}\r\n\r\n        {/* Global-Chats */}\r\n        {globalRooms.length > 0 && (\r\n          <>\r\n            <Box sx={{ p: 2, pb: 1 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ \r\n                fontWeight: 'bold',\r\n                color: 'rgba(255,255,255,0.7)'\r\n              }}>\r\n                🌐 Global ({globalRooms.length})\r\n              </Typography>\r\n            </Box>\r\n            <List dense>\r\n              {globalRooms.map((room) => (\r\n                <ListItem key={getRoomId(room)} disablePadding>\r\n                  <ListItemButton\r\n                    selected={roomId === getRoomId(room)}\r\n                    onClick={() => handleRoomClick(getRoomId(room))}\r\n                    sx={{\r\n                      borderRadius: 1,\r\n                      mx: 1,\r\n                      mb: 0.5,\r\n                      background: roomId === getRoomId(room) \r\n                        ? 'linear-gradient(135deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0.1) 100%)'\r\n                        : 'rgba(255,255,255,0.1)',\r\n                      '&:hover': {\r\n                        background: 'linear-gradient(135deg, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0.1) 100%)',\r\n                        transform: 'translateY(-2px)',\r\n                      },\r\n                      transition: 'all 0.3s ease',\r\n                      color: 'white'\r\n                    }}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Badge badgeContent={room.participants} color=\"primary\">\r\n                        <Public color=\"action\" />\r\n                      </Badge>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={room.name}\r\n                      secondary={\r\n                        <Typography variant=\"caption\" sx={{ color: 'rgba(255,255,255,0.7)' }}>\r\n                          {room.participants} aktiv weltweit\r\n                        </Typography>\r\n                      }\r\n                    />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </>\r\n        )}\r\n\r\n        {/* FALLBACK: Zeige alle Rooms wenn keine Kategorisierung funktioniert */}\r\n        {convertedRooms.length > 0 && regionalRooms.length === 0 && cityRooms.length === 0 && allNeighborhoodRooms.length === 0 && eventRooms.length === 0 && (\r\n          <>\r\n            <Box sx={{ p: 2, pb: 1 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ \r\n                fontWeight: 'bold',\r\n                color: 'white'\r\n              }}>\r\n                📍 Alle Chat-Räume ({convertedRooms.length})\r\n              </Typography>\r\n            </Box>\r\n            <List dense>\r\n              {convertedRooms.map((room, index) => (\r\n                <ListItem key={`all-${getRoomId(room)}-${index}`} disablePadding>\r\n                  <ListItemButton\r\n                    selected={roomId === getRoomId(room)}\r\n                    onClick={() => handleRoomClick(getRoomId(room))}\r\n                    sx={{\r\n                      borderRadius: 1,\r\n                      mx: 1,\r\n                      mb: 0.5,\r\n                      background: roomId === getRoomId(room) \r\n                        ? 'linear-gradient(135deg, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0.1) 100%)'\r\n                        : 'rgba(255,255,255,0.1)',\r\n                      '&:hover': {\r\n                        background: 'linear-gradient(135deg, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0.1) 100%)',\r\n                        transform: 'translateY(-2px)',\r\n                      },\r\n                      transition: 'all 0.3s ease',\r\n                      color: 'white'\r\n                    }}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Badge badgeContent={room.participants} color=\"primary\">\r\n                        {getRoomIcon(room.type, room.subType)}\r\n                      </Badge>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={room.name}\r\n                      secondary={\r\n                        <span style={{ display: 'flex', alignItems: 'center', gap: 8, flexWrap: 'wrap' }}>\r\n                          <span style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\r\n                            <People fontSize=\"small\" />\r\n                            <Typography variant=\"caption\" sx={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                              <People fontSize=\"small\" />\r\n                              <span>0 online</span> {/* Zeige \"0 online\" für neue Räume statt der generierten Teilnehmer */}\r\n                            </Typography>\r\n                          </span>\r\n                          {room.distance !== undefined && room.distance !== null && (\r\n                            <Chip \r\n                              label={`${room.distance}km`}\r\n                              size=\"small\" \r\n                              variant=\"outlined\"\r\n                              sx={{ \r\n                                height: 16, \r\n                                fontSize: '0.7rem',\r\n                                borderColor: 'rgba(255,255,255,0.5)',\r\n                                color: 'white'\r\n                              }}\r\n                            />\r\n                          )}\r\n                        </span>\r\n                      }\r\n                    />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <Divider sx={{ my: 1, borderColor: 'rgba(255,255,255,0.2)' }} />\r\n          </>\r\n        )}\r\n\r\n        {convertedRooms.length === 0 && !isLocationLoading && (\r\n          <Box sx={{ p: 3, textAlign: 'center' }}>\r\n            <Typography variant=\"body2\" sx={{ color: 'rgba(255,255,255,0.7)', mb: 2 }}>\r\n              🏠 Keine Chat-Räume verfügbar\r\n            </Typography>\r\n            <Typography variant=\"caption\" sx={{ color: 'rgba(255,255,255,0.5)' }}>\r\n              Standort wird verarbeitet oder Server-Problem\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n\r\n      {/* Event erstellen FAB */}\r\n      {userLocation && (\r\n        <Fab\r\n          color=\"secondary\"\r\n          sx={{\r\n            position: 'absolute',\r\n            bottom: 16,\r\n            right: 16,\r\n            zIndex: 1000\r\n          }}\r\n          onClick={() => setCreateEventOpen(true)}\r\n        >\r\n          <Add />\r\n        </Fab>\r\n      )}\r\n\r\n      {/* Event Dialog */}\r\n      <Dialog open={createEventOpen} onClose={() => setCreateEventOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n            <EventAvailable color=\"secondary\" />\r\n            Neues Event erstellen\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Event Name\"\r\n            value={eventName}\r\n            onChange={(e) => setEventName(e.target.value)}\r\n            margin=\"normal\"\r\n            placeholder=\"z.B. Rock am Ring 2025\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Beschreibung\"\r\n            value={eventDescription}\r\n            onChange={(e) => setEventDescription(e.target.value)}\r\n            margin=\"normal\"\r\n            multiline\r\n            rows={3}\r\n            placeholder=\"Was ist geplant?\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Start\"\r\n            type=\"datetime-local\"\r\n            value={eventStartDate}\r\n            onChange={(e) => setEventStartDate(e.target.value)}\r\n            margin=\"normal\"\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Ende\"\r\n            type=\"datetime-local\"\r\n            value={eventEndDate}\r\n            onChange={(e) => setEventEndDate(e.target.value)}\r\n            margin=\"normal\"\r\n            InputLabelProps={{ shrink: true }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setCreateEventOpen(false)}>\r\n            Abbrechen\r\n          </Button>\r\n          <Button \r\n            onClick={handleCreateEvent} \r\n            variant=\"contained\" \r\n            color=\"secondary\"\r\n            disabled={!eventName.trim()}\r\n          >\r\n            Event erstellen\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatRoomList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSocket } from '../../contexts/SocketContext';\r\n\r\nconst ChatRoom: React.FC = () => {\r\n    const { roomId } = useParams<{ roomId: string }>();\r\n    const { messages, joinRoom, sendMessage, currentRoom } = useSocket();\r\n    const [loading, setLoading] = useState(true);\r\n    const [inputMessage, setInputMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (roomId && roomId !== currentRoom) {\r\n            console.log('🚪 ChatRoom component: Joining room', roomId);\r\n            setLoading(true);\r\n            joinRoom(roomId);\r\n            \r\n            const timer = setTimeout(() => {\r\n                setLoading(false);\r\n            }, 1000);\r\n            \r\n            return () => clearTimeout(timer);\r\n        } else if (roomId === currentRoom) {\r\n            setLoading(false);\r\n        }\r\n    }, [roomId, currentRoom, joinRoom]);\r\n\r\n    const handleSendMessage = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (inputMessage.trim()) {\r\n            console.log('📤 ChatRoom: Sending message:', inputMessage);\r\n            sendMessage(inputMessage);\r\n            setInputMessage('');\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div style={{ \r\n                display: 'flex', \r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                height: '100%',\r\n                fontSize: '16px',\r\n                color: '#666'\r\n            }}>\r\n                Lade Chat-Raum...\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n            <div style={{ \r\n                flex: 1, \r\n                overflowY: 'auto', \r\n                padding: '16px',\r\n                backgroundColor: '#f5f5f5'\r\n            }}>\r\n                {messages && messages.length > 0 ? (\r\n                    messages.map((msg, index) => (\r\n                        <div key={msg._id || msg.id || index} style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                            marginBottom: '12px'\r\n                        }}>\r\n                            <div style={{\r\n                                maxWidth: '70%',\r\n                                padding: '12px 16px',\r\n                                borderRadius: '18px',\r\n                                backgroundColor: '#E5E5EA',\r\n                                color: 'black'\r\n                            }}>\r\n                                <div style={{ \r\n                                    fontSize: '12px', \r\n                                    color: '#666'\r\n                                }}>\r\n                                    {msg.user?.username || msg.username || 'Unbekannt'}\r\n                                </div>\r\n                                <div style={{ fontSize: '14px' }}>\r\n                                    {msg.content}\r\n                                </div>\r\n                                <div style={{ \r\n                                    fontSize: '10px', \r\n                                    color: '#999', \r\n                                    marginTop: '4px',\r\n                                    opacity: 0.7\r\n                                }}>\r\n                                    {new Date(msg.createdAt || msg.timestamp).toLocaleTimeString('de-DE', {\r\n                                        hour: '2-digit',\r\n                                        minute: '2-digit'\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div style={{ \r\n                        textAlign: 'center', \r\n                        color: '#999', \r\n                        marginTop: '50px',\r\n                        fontSize: '14px'\r\n                    }}>\r\n                        Noch keine Nachrichten. Schreibe die erste Nachricht!\r\n                    </div>\r\n                )}\r\n            </div>\r\n            \r\n            <form onSubmit={handleSendMessage} style={{\r\n                display: 'flex',\r\n                padding: '16px',\r\n                backgroundColor: 'white',\r\n                borderTop: '1px solid #e0e0e0'\r\n            }}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputMessage}\r\n                    onChange={(e) => setInputMessage(e.target.value)}\r\n                    placeholder=\"Nachricht schreiben...\"\r\n                    style={{\r\n                        flex: 1,\r\n                        padding: '12px 16px',\r\n                        border: '1px solid #ddd',\r\n                        borderRadius: '20px',\r\n                        outline: 'none',\r\n                        fontSize: '14px'\r\n                    }}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    disabled={!inputMessage.trim()}\r\n                    style={{\r\n                        marginLeft: '8px',\r\n                        padding: '12px 20px',\r\n                        backgroundColor: inputMessage.trim() ? '#007AFF' : '#ccc',\r\n                        color: 'white',\r\n                        border: 'none',\r\n                        borderRadius: '20px',\r\n                        cursor: inputMessage.trim() ? 'pointer' : 'not-allowed',\r\n                        fontSize: '14px'\r\n                    }}\r\n                >\r\n                    Senden\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatRoom;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Avatar,\r\n  Box,\r\n  Fade,\r\n  Backdrop\r\n} from '@mui/material';\r\nimport {\r\n  Menu as MenuIcon,\r\n  Person,\r\n  Settings,\r\n  Info\r\n} from '@mui/icons-material';\r\nimport { styled, keyframes } from '@mui/material/styles';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst growFromAvatar = keyframes`\r\n  0% {\r\n    transform: scale(0);\r\n    opacity: 0;\r\n  }\r\n  50% {\r\n    transform: scale(0.5);\r\n    opacity: 0.7;\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst pulseGlow = keyframes`\r\n  0% { box-shadow: 0 0 0 0 rgba(102, 126, 234, 0.4); }\r\n  70% { box-shadow: 0 0 0 20px rgba(102, 126, 234, 0); }\r\n  100% { box-shadow: 0 0 0 0 rgba(102, 126, 234, 0); }\r\n`;\r\n\r\nconst GlassAppBar = styled(AppBar)(() => ({\r\n  background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(248,250,252,0.98) 100%)',\r\n  backdropFilter: 'blur(20px)',\r\n  borderBottom: '1px solid rgba(102, 126, 234, 0.1)',\r\n  boxShadow: '0 8px 32px rgba(102, 126, 234, 0.15)',\r\n  color: '#2d3748',\r\n  height: 56, // KLEINER: von 64 auf 56px\r\n  '&::before': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: '2px',\r\n    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n  }\r\n}));\r\n\r\nconst FixedToolbar = styled(Toolbar)(() => ({\r\n  height: 56, // ANGEPASST: von 64 auf 56px\r\n  minHeight: 56,\r\n  paddingRight: 80,\r\n}));\r\n\r\nconst LogoIcon = styled(Box)(() => ({\r\n  width: 32,\r\n  height: 32,\r\n  borderRadius: '8px',\r\n  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: 'white',\r\n  fontWeight: 'bold',\r\n  fontSize: '14px',\r\n  marginRight: 12,\r\n  boxShadow: '0 4px 16px rgba(102, 126, 234, 0.3)',\r\n}));\r\n\r\nconst OverflowAvatar = styled(Avatar)(() => ({\r\n  width: 64, // GRÖSSER: von 56 auf 64px\r\n  height: 64,\r\n  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n  border: '3px solid rgba(255,255,255,0.9)',\r\n  boxShadow: '0 8px 25px rgba(102, 126, 234, 0.4)',\r\n  cursor: 'pointer',\r\n  transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n  position: 'absolute',\r\n  top: 14, // PERFEKT: 3/4 im Header (42px) + 1/4 darunter (16px) = 56/4*3 = 42 - 32 = 10 + padding\r\n  right: 16,\r\n  zIndex: 1000,\r\n  fontSize: '1.5rem', // GRÖSSER: Text im Avatar\r\n  '&:hover': {\r\n    transform: 'scale(1.1)',\r\n    animation: `${pulseGlow} 1.5s infinite`,\r\n  }\r\n}));\r\n\r\nconst MenuContainer = styled(Box)(() => ({\r\n  position: 'fixed',\r\n  top: 0,\r\n  right: 0,\r\n  left: 0,\r\n  bottom: 0,\r\n  zIndex: 9999,\r\n  pointerEvents: 'none',\r\n}));\r\n\r\nconst MenuCircle = styled(Box)<{ delay: number; active: boolean; angle: number }>(({ delay, active, angle }) => {\r\n  const avatarX = typeof window !== 'undefined' ? window.innerWidth - 48 : 300;\r\n  const avatarY = 46;\r\n  const radius = 110; // GRÖSSER: von 90 auf 110px für mehr Abstand\r\n  \r\n  const adjustedAngle = angle - 45;\r\n  \r\n  const targetX = avatarX + Math.cos(adjustedAngle * Math.PI / 180) * radius;\r\n  const targetY = avatarY + Math.sin(adjustedAngle * Math.PI / 180) * radius;\r\n\r\n  return {\r\n    width: 48,\r\n    height: 48,\r\n    borderRadius: '50%',\r\n    background: 'linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(248,250,252,0.95) 100%)',\r\n    backdropFilter: 'blur(20px)',\r\n    border: '2px solid rgba(102, 126, 234, 0.2)',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    pointerEvents: 'auto',\r\n    position: 'absolute',\r\n    left: `${targetX - 24}px`,\r\n    top: `${targetY - 24}px`,\r\n    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n    animation: active ? `${growFromAvatar} 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55) ${delay}s both` : 'none',\r\n    boxShadow: '0 8px 32px rgba(102, 126, 234, 0.2)',\r\n    transformOrigin: `${avatarX - targetX + 24}px ${avatarY - targetY + 24}px`,\r\n    '&:hover': {\r\n      transform: 'scale(1.1)',\r\n      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n      color: 'white',\r\n      boxShadow: '0 12px 40px rgba(102, 126, 234, 0.4)',\r\n    }\r\n  };\r\n});\r\n\r\ninterface MobileHeaderProps {\r\n  onMenuClick: () => void;\r\n}\r\n\r\nconst MobileHeader: React.FC<MobileHeaderProps> = ({ onMenuClick }) => {\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const handleAvatarClick = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n\r\n  const handleMenuItemClick = (action: string) => {\r\n    setMenuOpen(false);\r\n    setTimeout(() => {\r\n      switch (action) {\r\n        case 'profile':\r\n          navigate('/profile');\r\n          break;\r\n        case 'settings':\r\n          navigate('/settings');\r\n          break;\r\n        case 'info':\r\n          console.log('Info modal öffnen');\r\n          break;\r\n      }\r\n    }, 300);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlassAppBar position=\"fixed\">\r\n        <FixedToolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={onMenuClick}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          \r\n          <Box sx={{ display: 'flex', alignItems: 'center', flex: 1 }}>\r\n            <LogoIcon>C</LogoIcon>\r\n            <Typography \r\n              variant=\"h6\" \r\n              sx={{ \r\n                fontWeight: 700,\r\n                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n                WebkitBackgroundClip: 'text',\r\n                WebkitTextFillColor: 'transparent',\r\n                letterSpacing: '1px'\r\n              }}\r\n            >\r\n              CHATILO\r\n            </Typography>\r\n          </Box>\r\n        </FixedToolbar>\r\n\r\n        <OverflowAvatar onClick={handleAvatarClick}>\r\n          {user?.username?.charAt(0)?.toUpperCase() || 'U'}\r\n        </OverflowAvatar>\r\n      </GlassAppBar>\r\n\r\n      {menuOpen && (\r\n        <Fade in={menuOpen} timeout={300}>\r\n          <Backdrop\r\n            open={menuOpen}\r\n            onClick={() => setMenuOpen(false)}\r\n            sx={{ zIndex: 9998, backgroundColor: 'rgba(0,0,0,0.1)' }}\r\n          />\r\n        </Fade>\r\n      )}\r\n\r\n      {menuOpen && (\r\n        <MenuContainer>\r\n          {/* Profile Circle - mit größerem Abstand */}\r\n          <MenuCircle\r\n            delay={0.1}\r\n            active={menuOpen}\r\n            angle={225} // GEÄNDERT: von 210° auf 225° für mehr Abstand\r\n            onClick={() => handleMenuItemClick('profile')}\r\n          >\r\n            <Person sx={{ color: '#667eea', fontSize: 20 }} />\r\n          </MenuCircle>\r\n\r\n          {/* Settings Circle - bleibt zentral */}\r\n          <MenuCircle\r\n            delay={0.2}\r\n            active={menuOpen}\r\n            angle={180} // BLEIBT: 180° (direkt links)\r\n            onClick={() => handleMenuItemClick('settings')}\r\n          >\r\n            <Settings sx={{ color: '#667eea', fontSize: 20 }} />\r\n          </MenuCircle>\r\n\r\n          {/* Info Circle - mit größerem Abstand */}\r\n          <MenuCircle\r\n            delay={0.3}\r\n            active={menuOpen}\r\n            angle={135} // GEÄNDERT: von 150° auf 135° für mehr Abstand\r\n            onClick={() => handleMenuItemClick('info')}\r\n          >\r\n            <Info sx={{ color: '#667eea', fontSize: 20 }} />\r\n          </MenuCircle>\r\n        </MenuContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MobileHeader;\r\n","import React, { useState } from 'react';\r\nimport { Box, Drawer, AppBar, Toolbar, IconButton, Typography, useMediaQuery, useTheme } from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChatRoomList from '../components/ChatRoomList';\r\nimport ChatRoom from '../components/chat/ChatRoom';\r\nimport { useParams } from 'react-router-dom';\r\nimport MobileHeader from '../components/MobileHeader';\r\n\r\nconst ChatPage: React.FC = () => {\r\n  const { roomId } = useParams<{ roomId: string }>();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setDrawerOpen(!drawerOpen);\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <Box sx={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\r\n        <MobileHeader onMenuClick={() => setMobileMenuOpen(true)} />\r\n        \r\n        {/* Mobile Drawer */}\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          open={mobileMenuOpen}\r\n          onClose={() => setMobileMenuOpen(false)}\r\n          ModalProps={{ keepMounted: true }}\r\n          sx={{\r\n            '& .MuiDrawer-paper': {\r\n              width: 300,\r\n              background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\r\n            },\r\n          }}\r\n        >\r\n          <ChatRoomList />\r\n        </Drawer>\r\n\r\n        {/* Main Content */}\r\n        <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column', mt: '64px' }}>\r\n          <ChatRoom />\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Desktop version\r\n  return (\r\n    <Box sx={{ display: 'flex', height: '100vh' }}>\r\n      {/* Mobile Header mit Menu Button */}\r\n      {isMobile && (\r\n        <AppBar position=\"fixed\" sx={{ zIndex: 1300 }}>\r\n          <Toolbar>\r\n            <IconButton \r\n              edge=\"start\" \r\n              color=\"inherit\" \r\n              onClick={handleDrawerToggle}\r\n              sx={{ mr: 2 }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\">Chatilo</Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      )}\r\n\r\n      {/* Responsive Drawer */}\r\n      <Drawer\r\n        variant={isMobile ? 'temporary' : 'permanent'}\r\n        open={isMobile ? drawerOpen : true}\r\n        onClose={handleDrawerToggle}\r\n        sx={{\r\n          width: isMobile ? '100%' : 320,\r\n          flexShrink: 0,\r\n          '& .MuiDrawer-paper': {\r\n            width: isMobile ? '100%' : 320,\r\n            boxSizing: 'border-box',\r\n            marginTop: isMobile ? '64px' : 0, // Platz für AppBar\r\n          },\r\n        }}\r\n        ModalProps={{\r\n          keepMounted: true, // Better mobile performance\r\n        }}\r\n      >\r\n        <ChatRoomList />\r\n      </Drawer>\r\n\r\n      {/* Main Content */}\r\n      <Box\r\n        component=\"main\"\r\n        sx={{ \r\n          flexGrow: 1, \r\n          width: { md: `calc(100% - ${320}px)` },\r\n          height: '100%',\r\n          display: 'flex', \r\n          flexDirection: 'column',\r\n          marginTop: isMobile ? '64px' : 0, // Platz für AppBar\r\n        }}\r\n      >\r\n        {roomId ? (\r\n          <ChatRoom />\r\n        ) : (\r\n          <Box sx={{ \r\n            display: 'flex', \r\n            alignItems: 'center', \r\n            justifyContent: 'center', \r\n            height: '100%',\r\n            color: 'text.secondary'\r\n          }}>\r\n            Wähle einen Chat-Raum aus\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n","import React, { useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Avatar,\r\n  Divider,\r\n  Snackbar,\r\n  Alert,\r\n  Container,\r\n  IconButton,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport {\r\n  ArrowBack,\r\n  Edit,\r\n  Save,\r\n  Cancel,\r\n  CameraAlt,\r\n  PhotoCamera\r\n} from '@mui/icons-material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\n// Styled Components\r\nconst GradientBackground = styled(Box)(({ theme }) => ({\r\n  minHeight: '100vh',\r\n  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n  padding: theme.spacing(2),\r\n}));\r\n\r\nconst GlassCard = styled(Paper)(({ theme }) => ({\r\n  background: 'rgba(255, 255, 255, 0.95)',\r\n  backdropFilter: 'blur(20px)',\r\n  borderRadius: 20,\r\n  border: '2px solid rgba(255, 255, 255, 0.3)',\r\n  padding: theme.spacing(4),\r\n  color: theme.palette.text.primary,\r\n  boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\r\n}));\r\n\r\nconst ChatiloIcon = styled(Box)(({ theme }) => ({\r\n  width: 60,\r\n  height: 60,\r\n  borderRadius: '12px',\r\n  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  margin: '0 auto 20px auto',\r\n  boxShadow: '0 8px 25px rgba(102, 126, 234, 0.4)',\r\n}));\r\n\r\nconst ChatiloSymbol = styled(Typography)(({ theme }) => ({\r\n  color: 'white',\r\n  fontSize: '28px',\r\n  fontWeight: 'bold',\r\n}));\r\n\r\nconst ProfileAvatar = styled(Avatar)(({ theme }) => ({\r\n  width: 120,\r\n  height: 120,\r\n  marginBottom: theme.spacing(2),\r\n  border: '4px solid rgba(255, 255, 255, 0.9)',\r\n  boxShadow: '0 8px 25px rgba(102, 126, 234, 0.3)',\r\n  cursor: 'pointer',\r\n  position: 'relative',\r\n  transition: 'all 0.3s ease',\r\n  '&:hover': {\r\n    transform: 'scale(1.05)',\r\n    boxShadow: '0 12px 35px rgba(102, 126, 234, 0.5)',\r\n  }\r\n}));\r\n\r\nconst AvatarOverlay = styled(Box)(({ theme }) => ({\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  borderRadius: '50%',\r\n  background: 'rgba(0, 0, 0, 0.5)',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  opacity: 0,\r\n  transition: 'opacity 0.3s ease',\r\n  '&:hover': {\r\n    opacity: 1,\r\n  }\r\n}));\r\n\r\nconst BioTextField = styled(TextField)(({ theme }) => ({\r\n  '& .MuiInputBase-root': {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n    borderRadius: 12,\r\n  },\r\n  '& .MuiOutlinedInput-root': {\r\n    '&:hover fieldset': {\r\n      borderColor: '#667eea',\r\n    },\r\n    '&.Mui-focused fieldset': {\r\n      borderColor: '#667eea',\r\n    },\r\n  }\r\n}));\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  \r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\r\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' as 'success' | 'error' });\r\n  \r\n  const [editData, setEditData] = useState({\r\n    username: user?.username || '',\r\n    email: user?.email || '',\r\n    bio: user?.bio || '' // BIO HINZUGEFÜGT\r\n  });\r\n\r\n  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setSelectedImage(e.target?.result as string);\r\n        setSnackbar({ \r\n          open: true, \r\n          message: 'Profilbild aktualisiert! Vergiss nicht zu speichern.', \r\n          severity: 'success' \r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleAvatarClick = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n    setEditData({\r\n      username: user?.username || '',\r\n      email: user?.email || '',\r\n      bio: user?.bio || ''\r\n    });\r\n    setSelectedImage(null);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      // TODO: API-Call zum Speichern der Profildaten\r\n      console.log('Speichere Profildaten:', editData, selectedImage);\r\n      \r\n      setSnackbar({ \r\n        open: true, \r\n        message: 'Profil erfolgreich aktualisiert!', \r\n        severity: 'success' \r\n      });\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      setSnackbar({ \r\n        open: true, \r\n        message: 'Fehler beim Speichern des Profils.', \r\n        severity: 'error' \r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GradientBackground>\r\n      <Container maxWidth=\"md\">\r\n        <GlassCard elevation={0}>\r\n          {/* ZURÜCK BUTTON */}\r\n          <Box sx={{ mb: 3 }}>\r\n            <Button\r\n              startIcon={<ArrowBack />}\r\n              onClick={() => navigate('/chat')}\r\n              sx={{\r\n                background: 'linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(255, 255, 255, 0.1) 100%)',\r\n                color: 'primary.main',\r\n                fontWeight: 600,\r\n                borderRadius: 3,\r\n                px: 3,\r\n                py: 1.5,\r\n                '&:hover': {\r\n                  background: 'linear-gradient(135deg, rgba(102, 126, 234, 0.2) 0%, rgba(255, 255, 255, 0.2) 100%)',\r\n                  transform: 'translateX(-5px)',\r\n                },\r\n                transition: 'all 0.3s ease'\r\n              }}\r\n            >\r\n              Zurück zum Chat\r\n            </Button>\r\n          </Box>\r\n\r\n          {/* PROFIL HEADER */}\r\n          <Box textAlign=\"center\" mb={4}>\r\n            <ChatiloIcon>\r\n              <ChatiloSymbol>C</ChatiloSymbol>\r\n            </ChatiloIcon>\r\n            \r\n            <Typography \r\n              variant=\"h3\"\r\n              sx={{\r\n                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n                WebkitBackgroundClip: 'text',\r\n                WebkitTextFillColor: 'transparent',\r\n                fontWeight: 'bold',\r\n                textAlign: 'center',\r\n                marginBottom: 1,\r\n              }}\r\n            >\r\n              Mein Profil\r\n            </Typography>\r\n            \r\n            <Typography \r\n              variant=\"h6\" \r\n              color=\"text.secondary\" \r\n              sx={{ fontWeight: 500, opacity: 0.8 }}\r\n            >\r\n              Verwalte deine CHATILO Einstellungen\r\n            </Typography>\r\n          </Box>\r\n\r\n          {/* Hidden File Input */}\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            style={{ display: 'none' }}\r\n            accept=\"image/*\"\r\n            onChange={handleImageUpload}\r\n          />\r\n          \r\n          {/* Profile Picture & Info */}\r\n          <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" mb={4}>\r\n            <Box sx={{ position: 'relative' }}>\r\n              <ProfileAvatar\r\n                src={selectedImage || user?.avatar || undefined}\r\n                onClick={handleAvatarClick}\r\n              >\r\n                {user?.username?.charAt(0).toUpperCase()}\r\n                <AvatarOverlay>\r\n                  <PhotoCamera sx={{ color: 'white', fontSize: 30 }} />\r\n                </AvatarOverlay>\r\n              </ProfileAvatar>\r\n              \r\n              <Tooltip title=\"Profilbild ändern\" placement=\"top\">\r\n                <IconButton\r\n                  onClick={handleAvatarClick}\r\n                  sx={{\r\n                    position: 'absolute',\r\n                    bottom: 0,\r\n                    right: 0,\r\n                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n                    color: 'white',\r\n                    width: 36,\r\n                    height: 36,\r\n                    '&:hover': {\r\n                      background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)',\r\n                      transform: 'scale(1.1)',\r\n                    }\r\n                  }}\r\n                >\r\n                  <CameraAlt fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Box>\r\n            \r\n            <Typography variant=\"h6\" color=\"primary\">\r\n              {user?.username}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Mitglied seit {new Date(user?.createdAt || Date.now()).toLocaleDateString('de-DE')}\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Divider sx={{ mb: 3 }} />\r\n\r\n          {/* Profile Information */}\r\n          <Box mb={3}>\r\n            <Typography variant=\"h6\" gutterBottom color=\"text.primary\">\r\n              Persönliche Informationen\r\n            </Typography>\r\n            \r\n            <Box mb={2}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Benutzername\"\r\n                value={isEditing ? editData.username : user?.username || ''}\r\n                onChange={(e) => setEditData({ ...editData, username: e.target.value })}\r\n                disabled={!isEditing}\r\n                variant={isEditing ? \"outlined\" : \"filled\"}\r\n                sx={{\r\n                  '& .MuiInputBase-root': {\r\n                    backgroundColor: isEditing ? 'background.paper' : 'rgba(0,0,0,0.05)'\r\n                  }\r\n                }}\r\n              />\r\n            </Box>\r\n            \r\n            <Box mb={2}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"E-Mail\"\r\n                value={isEditing ? editData.email : user?.email || ''}\r\n                onChange={(e) => setEditData({ ...editData, email: e.target.value })}\r\n                disabled={!isEditing}\r\n                variant={isEditing ? \"outlined\" : \"filled\"}\r\n                sx={{\r\n                  '& .MuiInputBase-root': {\r\n                    backgroundColor: isEditing ? 'background.paper' : 'rgba(0,0,0,0.05)'\r\n                  }\r\n                }}\r\n              />\r\n            </Box>\r\n\r\n            {/* BIO FIELD HINZUGEFÜGT */}\r\n            <Box mb={2}>\r\n              <BioTextField\r\n                fullWidth\r\n                multiline\r\n                rows={3}\r\n                label=\"Über mich\"\r\n                placeholder=\"Erzähle etwas über dich... (max. 200 Zeichen)\"\r\n                value={isEditing ? editData.bio : user?.bio || ''}\r\n                onChange={(e) => {\r\n                  if (e.target.value.length <= 200) {\r\n                    setEditData({ ...editData, bio: e.target.value });\r\n                  }\r\n                }}\r\n                disabled={!isEditing}\r\n                variant={isEditing ? \"outlined\" : \"filled\"}\r\n                helperText={isEditing ? `${editData.bio.length}/200 Zeichen` : ''}\r\n                sx={{\r\n                  '& .MuiInputBase-root': {\r\n                    backgroundColor: isEditing ? 'background.paper' : 'rgba(0,0,0,0.05)'\r\n                  }\r\n                }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider sx={{ mb: 3 }} />\r\n\r\n          {/* SETTINGS ENTFERNT - nur Edit/Save Buttons */}\r\n          <Box display=\"flex\" justifyContent=\"center\" gap={2}>\r\n            {!isEditing ? (\r\n              <Button\r\n                startIcon={<Edit />}\r\n                onClick={handleEdit}\r\n                variant=\"contained\"\r\n                sx={{\r\n                  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n                  borderRadius: 3,\r\n                  px: 4,\r\n                  py: 1.5,\r\n                  '&:hover': {\r\n                    background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)',\r\n                    transform: 'translateY(-2px)',\r\n                  }\r\n                }}\r\n              >\r\n                Profil bearbeiten\r\n              </Button>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  startIcon={<Save />}\r\n                  onClick={handleSave}\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    background: 'linear-gradient(135deg, #4ade80 0%, #22c55e 100%)',\r\n                    borderRadius: 3,\r\n                    px: 4,\r\n                    py: 1.5,\r\n                    '&:hover': {\r\n                      background: 'linear-gradient(135deg, #22c55e 0%, #4ade80 100%)',\r\n                      transform: 'translateY(-2px)',\r\n                    }\r\n                  }}\r\n                >\r\n                  Speichern\r\n                </Button>\r\n                <Button\r\n                  startIcon={<Cancel />}\r\n                  onClick={handleCancel}\r\n                  variant=\"outlined\"\r\n                  sx={{\r\n                    borderColor: '#ef4444',\r\n                    color: '#ef4444',\r\n                    borderRadius: 3,\r\n                    px: 4,\r\n                    py: 1.5,\r\n                    '&:hover': {\r\n                      backgroundColor: '#ef4444',\r\n                      color: 'white',\r\n                      transform: 'translateY(-2px)',\r\n                    }\r\n                  }}\r\n                >\r\n                  Abbrechen\r\n                </Button>\r\n              </>\r\n            )}\r\n          </Box>\r\n        </GlassCard>\r\n      </Container>\r\n\r\n      {/* Snackbar für Feedback */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={4000}\r\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n      >\r\n        <Alert \r\n          onClose={() => setSnackbar({ ...snackbar, open: false })} \r\n          severity={snackbar.severity}\r\n          sx={{ borderRadius: 2 }}\r\n        >\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </GradientBackground>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React, { useState } from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Card, \r\n  CardContent, \r\n  Switch, \r\n  Button,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Alert\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport PrivacyTipIcon from '@mui/icons-material/PrivacyTip';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst GradientCard = styled(Card)(({ theme }) => ({\r\n  background: 'linear-gradient(135deg, rgba(255,255,255,0.9) 0%, rgba(248,250,252,0.9) 100%)',\r\n  backdropFilter: 'blur(10px)',\r\n  borderRadius: 20,\r\n  border: '1px solid rgba(102, 126, 234, 0.1)',\r\n  boxShadow: '0 8px 32px rgba(102, 126, 234, 0.1)',\r\n  marginBottom: theme.spacing(3),\r\n}));\r\n\r\nconst GradientButton = styled(Button)(({ theme }) => ({\r\n  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n  color: 'white',\r\n  borderRadius: 12,\r\n  padding: '12px 24px',\r\n  fontWeight: 600,\r\n  textTransform: 'none',\r\n  '&:hover': {\r\n    background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)',\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: '0 6px 20px rgba(102, 126, 234, 0.4)',\r\n  }\r\n}));\r\n\r\nconst SettingsPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [settings, setSettings] = useState({\r\n    locationEnabled: true,\r\n    notifications: true,\r\n    darkMode: false,\r\n    privateProfile: false,\r\n  });\r\n  const [saveStatus, setSaveStatus] = useState<'idle' | 'saving' | 'saved' | 'error'>('idle');\r\n\r\n  const handleSettingChange = (setting: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSettings(prev => ({\r\n      ...prev,\r\n      [setting]: event.target.checked\r\n    }));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setSaveStatus('saving');\r\n    try {\r\n      // API-Call würde hier kommen\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      setSaveStatus('saved');\r\n      setTimeout(() => setSaveStatus('idle'), 3000);\r\n    } catch (error) {\r\n      setSaveStatus('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box \r\n      sx={{ \r\n        minHeight: '100vh',\r\n        background: 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)',\r\n        p: 3,\r\n        overflow: 'auto'\r\n      }}\r\n    >\r\n      <Box sx={{ maxWidth: 800, mx: 'auto' }}>\r\n        {/* Header */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\r\n          <Button\r\n            startIcon={<ArrowBackIcon />}\r\n            onClick={() => navigate('/chat')}\r\n            sx={{ mr: 2, color: 'primary.main' }}\r\n          >\r\n            Zurück\r\n          </Button>\r\n          <Typography \r\n            variant=\"h4\" \r\n            sx={{ \r\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n              WebkitBackgroundClip: 'text',\r\n              WebkitTextFillColor: 'transparent',\r\n              fontWeight: 700\r\n            }}\r\n          >\r\n            Einstellungen\r\n          </Typography>\r\n          {/* ENTFERNT: Chat und Profil Buttons */}\r\n        </Box>\r\n\r\n        {/* Einstellungen */}\r\n        <GradientCard>\r\n          <CardContent sx={{ p: 0 }}>\r\n            <Typography variant=\"h6\" sx={{ p: 3, pb: 1 }}>\r\n              App-Einstellungen\r\n            </Typography>\r\n            \r\n            <List>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <LocationOnIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Standort-Dienste\"\r\n                  secondary=\"Ermöglicht lokale Chat-Räume\"\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <Switch\r\n                    checked={settings.locationEnabled}\r\n                    onChange={handleSettingChange('locationEnabled')}\r\n                    color=\"primary\"\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              \r\n              <Divider />\r\n              \r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <NotificationsIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Push-Benachrichtigungen\"\r\n                  secondary=\"Erhalte Nachrichten auch wenn die App geschlossen ist\"\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <Switch\r\n                    checked={settings.notifications}\r\n                    onChange={handleSettingChange('notifications')}\r\n                    color=\"primary\"\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              \r\n              <Divider />\r\n              \r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <DarkModeIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Dunkles Design\"\r\n                  secondary=\"Aktiviere den Dark Mode\"\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <Switch\r\n                    checked={settings.darkMode}\r\n                    onChange={handleSettingChange('darkMode')}\r\n                    color=\"primary\"\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n              \r\n              <Divider />\r\n              \r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <PrivacyTipIcon color=\"primary\" />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Privates Profil\"\r\n                  secondary=\"Nur Freunde können dein Profil sehen\"\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <Switch\r\n                    checked={settings.privateProfile}\r\n                    onChange={handleSettingChange('privateProfile')}\r\n                    color=\"primary\"\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </List>\r\n          </CardContent>\r\n        </GradientCard>\r\n\r\n        {/* Speichern */}\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          {saveStatus === 'saved' && (\r\n            <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n              Einstellungen erfolgreich gespeichert!\r\n            </Alert>\r\n          )}\r\n          \r\n          <GradientButton \r\n            onClick={handleSave}\r\n            disabled={saveStatus === 'saving'}\r\n            size=\"large\"\r\n          >\r\n            {saveStatus === 'saving' ? 'Speichere...' : 'Einstellungen speichern'}\r\n          </GradientButton>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Box, CircularProgress } from '@mui/material';\r\n\r\ninterface ProtectedRouteProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\r\n  const { user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '100vh',\r\n          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 25%, #f093fb 50%, #f5576c 75%, #4facfe 100%)',\r\n        }}\r\n      >\r\n        <CircularProgress size={60} sx={{ color: 'white' }} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport ChatPage from './pages/ChatPage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport SettingsPage from './pages/SettingsPage';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport { SocketProvider } from './contexts/SocketContext';\r\nimport ProtectedRoute from './components/ProtectedRoute';\r\nimport { createTheme } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: { main: '#1976d2' },\r\n    secondary: { main: '#dc004e' },\r\n  },\r\n});\r\n\r\n// FINAL FORCE REBUILD - ABSOLUTLY CRITICAL\r\nconst FINAL_VERSION = \"ABSOLUTE_FINAL_V6_\" + Date.now();\r\nconst EMERGENCY_TIMESTAMP = new Date().toISOString();\r\n\r\nfunction App() {\r\n  console.log('🔧 DEBUG: App component initializing...');\r\n  \r\n  useEffect(() => {\r\n    console.log('🔧 DEBUG: App useEffect - Component mounted');\r\n    console.log('   Window dimensions:', { width: window.innerWidth, height: window.innerHeight });\r\n    console.log('   User Agent:', navigator.userAgent);\r\n    console.log('   Local Storage keys:', Object.keys(localStorage));\r\n    console.log('   Session Storage keys:', Object.keys(sessionStorage));\r\n    \r\n    return () => {\r\n      console.log('🔧 DEBUG: App useEffect - Component will unmount');\r\n    };\r\n  }, []);\r\n\r\n  console.log('🔧 DEBUG: App component rendering...');\r\n\r\n  // FINAL EMERGENCY LOGS\r\n  console.log('🆘🆘🆘🆘🆘 FINAL EMERGENCY REBUILD!!! 🆘🆘🆘🆘🆘');\r\n  console.log(`🔥 FINAL VERSION: ${FINAL_VERSION}`);\r\n  console.log(`⏰ TIMESTAMP: ${EMERGENCY_TIMESTAMP}`);\r\n  console.log('🚪 ROOM ROUTE /chat/:roomId ABSOLUTELY MUST WORK NOW!');\r\n  console.log('✅ ALL ROUTES: /login, /register, /chat, /chat/:roomId, /profile, /settings');\r\n  \r\n  // THROW ERROR IF OLD VERSION\r\n  if (!FINAL_VERSION || FINAL_VERSION.length < 20) {\r\n    console.error('💥💥💥 OLD APP VERSION DETECTED - CRITICAL ERROR');\r\n    throw new Error('CRITICAL: OLD APP VERSION STILL LOADING!');\r\n  }\r\n  \r\n  return (\r\n    <AuthProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Router future={{ v7_startTransition: true, v7_relativeSplatPath: true }}>\r\n          <Routes>\r\n            <Route path=\"/login\" element={<LoginPage />} />\r\n            <Route path=\"/register\" element={<RegisterPage />} />\r\n            \r\n            {/* BASE CHAT ROUTE */}\r\n            <Route\r\n              path=\"/chat\"\r\n              element={\r\n                <ProtectedRoute>\r\n                  <SocketProvider>\r\n                    <ChatPage />\r\n                  </SocketProvider>\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n            \r\n            {/* 🆘 ABSOLUTELY CRITICAL ROOM ROUTE 🆘 */}\r\n            <Route\r\n              path=\"/chat/:roomId\"\r\n              element={\r\n                <ProtectedRoute>\r\n                  <SocketProvider>\r\n                    <ChatPage />\r\n                  </SocketProvider>\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n            \r\n            <Route\r\n              path=\"/profile\"\r\n              element={\r\n                <ProtectedRoute>\r\n                  <ProfilePage />\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/settings\"\r\n              element={\r\n                <ProtectedRoute>\r\n                  <SettingsPage />\r\n                </ProtectedRoute>\r\n              }\r\n            />\r\n            <Route path=\"/\" element={<Navigate to=\"/chat\" replace />} />\r\n          </Routes>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}